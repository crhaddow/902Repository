<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="urn:ccsds:schema:cssm:1.0.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:ccsds:schema:cssm:1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0">
	<xsd:include schemaLocation="frm_type_definitions.xsd"/>
	<xsd:include schemaLocation="AbstractFrStrataParameterSets.xsd"/>
	<!--
The RafTsProvider accepts as input the frames provided by the FlfSyncAndDecode and
 the OfflineFrameBuffer FRs. Furthermore, the RafTsProvider FR type is specified
 to accept variable length frames delivered by the TcPlopSyncChnlDecode FR.
-->
	<xsd:element name="RafTsProviderElement" type="RafTsProviderType" substitutionGroup="DataTransferServicesStratumParameters"/>
	<xsd:complexType name="RafTsProviderType">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:all>
					<xsd:element name="rafSvcInstanceId" type="RafSvcInstanceIdNamed" minOccurs="0"/>
					<xsd:element name="rafInitiatorId" type="RafInitiatorIdNamed" minOccurs="0"/>
					<xsd:element name="rafResponderId" type="RafResponderIdNamed" minOccurs="0"/>
					<xsd:element name="rafResponderPortId" type="RafResponderPortIdNamed" minOccurs="0"/>
					<xsd:element name="rafRtnTimeoutPeriod" type="RafRtnTimeoutPeriodNamed" minOccurs="0"/>
					<xsd:element name="rafDeliveryMode" type="RafDeliveryModeNamed" minOccurs="0"/>
					<xsd:element name="rafLatencyLimit" type="RafLatencyLimitNamed" minOccurs="0"/>
					<xsd:element name="rafTransferBufferSize" type="RafTransferBufferSizeNamed" minOccurs="0"/>
					<xsd:element name="rafPermittedFrameQuality" type="RafPermittedFrameQualityNamed" minOccurs="0"/>
					<xsd:element name="rafMinReportingCycle" type="RafMinReportingCycleNamed" minOccurs="0"/>
				</xsd:all>
				<xsd:attribute name="frin" type="xsd:string" use="optional"/>
				<xsd:attribute name="frTypeOid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400"/>
				<xsd:attribute name="frNickname" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This enumerated parameter reports the status of the service production process used
 by the given instance of an RAF service. It can take on the following values:
-
 'running':  the RAF production process is capable of processing a return space link
 physical channel, if available;
- 'interrupted':  the RAF production process is
 stopped due to a fault;
- 'halted':  the RAF production process is stopped and
 production equipment is taken out of service due to management action.
-->
	<xsd:simpleType name="RafProdStat">
		<xsd:restriction base="SleRtnProdStat"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the identifier of the given service instance.
 
-->
	<xsd:complexType name="RafSvcInstanceIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RafSvcInstanceId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RafSvcInstanceId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400.1.2.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RafSvcInstanceId">
		<xsd:restriction base="SleSvcInstanceId"/>
	</xsd:simpleType>
	<!--
This enumerated parameter reports the status of the given instance of the RAF service.
 It can take on the following values:
- 'unbound':  all resources required to enable
 the provision of the RAF service have been allocated, and all objects required to
 provide the service have been instantiated; however, no association yet exists between
 the user and the provider, i.e., the RAF transfer service provider port is not bound;
-
 'ready':  an association has been established between the user and the provider,
 and they may interact by means of the service operations. However, sending of telemetry
 frames from the provider to the user (by means of the RAF-TRANSFER-DATA operation)
 is not permitted; the user may enable the delivery of telemetry frames by means
 of the appropriate service operation (RAF-START), which, in turn, will cause the
 provider to transition to the rafSvcInstanceState 'active';
- 'active':  this state
 resembles the rafSvcInstanceState ‘ready’, except that now the provider will send
 telemetry frames provided frames of the selected characteristics are made available
 by the RAF production process; the service continues in this state until the user
 invokes either the RAF-STOP operation to cause the provider to suspend delivery
 of telemetry frames and transition back to the rafSvcInstanceState 'ready' or the
 PEER-ABORT invocation to cause the service to transition back to the rafSvcInstanceState
 'unbound'.
-->
	<xsd:simpleType name="RafSvcInstanceState">
		<xsd:restriction base="SleSvcInstanceState"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the identifier of the peer application, i.e.,
 the authority on whose behalf the SLE application entity is initiating an association
 with the RAF service provider. The provider performs access control based on this
 parameter. It may also serve as key to further security relevant information such
 as the authentication level and method and the related password.

Given the security
 relevance of this parameter, specific mechanisms for setting this parameter when
 the FR instance is created and for the transfer of associated security relevant
 data might be specified in a bilateral agreement between service user and service
 provider. Also the accessibility by an MD-CSTS instance may be restricted.
-->
	<xsd:complexType name="RafInitiatorIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RafInitiatorId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RafInitiatorId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400.1.4.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RafInitiatorId">
		<xsd:restriction base="AuthorityIdentifier"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the identifier of the RAF application. The
 user performs access conrol based on this parameter. It may also serve as key to
 further security relevant information such as the authentication level and method
 and the related password.

Given the security relevance of this parameter, specific
 mechanisms for setting this parameter when the FR instance is created and for the
 transfer of associated security relevant data might be specified in a bilateral
 agreement between service user and service provider. Also the accessibility by an
 MD-CSTS instance may be restricted.
-->
	<xsd:complexType name="RafResponderIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RafResponderId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RafResponderId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400.1.5.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RafResponderId">
		<xsd:restriction base="AuthorityIdentifier"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the port identifier to be used by the user
 to connect to the service provider. However, the parameter value is only a logical
 name that needs to be translated into the technology-specific addressing information
 required to establish a connection with the specific port of the responding SLE
 application entity. As such this parameter is irrelevant for the service provider,
 but it may be needed for certain kind of gateways between service user and service
 provider application.
-->
	<xsd:complexType name="RafResponderPortIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RafResponderPortId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RafResponderPortId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400.1.6.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RafResponderPortId">
		<xsd:restriction base="ResponderPortId"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the setting of the maximum time period in seconds
 permitted from when a confirmed RAF operation is invoked until the return is received
 by the invoker.

If a response is not received within that time period, the invoker
 may invoke the PEER-ABORT operation.
-->
	<xsd:complexType name="RafRtnTimeoutPeriodNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RafRtnTimeoutPeriod" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RafRtnTimeoutPeriod"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400.1.7.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RafRtnTimeoutPeriod">
		<xsd:restriction base="SvcResponseTimeout"/>
	</xsd:simpleType>
	<!--
This enumerated parameter configures and reports the delivery mode of the given RAF
 service instance. It can take on three values:
- 'onlineTimely':  this delivery
 mode limits the size of the backlog of not yet delivered data that is allowed to
 accumulate by discarding data that cannot be delivered within a certain time. Furthermore,
 when data is discarded, it is discarded ‘in chunks’, i.e., as a sufficiently large
 block of contiguous frames rather than as random frames here and there; in general,
 this approach maximizes the usefulness of the data that is delivered.
- 'onlineComplete':
  this delivery mode attempts to deliver all acquired frames having the user selected
 characteristics, in order, with minimum delay consistent with the available ground
 communications bandwidth. To that end, the service provider has a buffer sufficiently
 large to deal with communications service delays, outages, and bandwidth limitations;
-
 'offline':  in this delivery mode, the provider buffer (see OfflineFrameBuffer FR)
 enables data to be delivered hours or days after their acquisition. To that end,
 this buffer is sufficiently large to hold all data that might be accumulated during
 several space link sessions.
-->
	<xsd:complexType name="RafDeliveryModeNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RafDeliveryMode" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RafDeliveryMode"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400.1.8.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RafDeliveryMode">
		<xsd:restriction base="SleRtnDeliveryMode"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the maximum allowable delivery latency time,
 in seconds, for the online delivery modes, i.e., the maximum delay from when the
 frame has been acquired by the provider until it is delivered to the user.  If rafDeliveryMode
 = 'offline', rafLatencyLimit has no effect.
-->
	<!--
 The engineering unit of this parameter is second
 -->
	<xsd:complexType name="RafLatencyLimitNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RafLatencyLimit" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RafLatencyLimit"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400.1.9.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RafLatencyLimit">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="1"/>
			<xsd:maxInclusive value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This parameter configures and reports the number of frames the provider shall block
 in one RAF-PDU before passing it to the underlying communications layer except if
 expiry of the rafLatencyLimit requires earlier release of the RAF-PDU.
-->
	<xsd:complexType name="RafTransferBufferSizeNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RafTransferBufferSize" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RafTransferBufferSize"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400.1.10.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RafTransferBufferSize">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="1"/>
			<xsd:maxInclusive value="1000"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This enumerated parameter configures and reports the set of the quality of the frames
 that the user may select with the given RAF service instance. The permitted frame
 quality settings must be chosen from the following set of values: 
- 'good':  only
 frames that based on successful RS or LDPC decoding/correcting and/or based on the
 check of the FECF are assumed to be error free will be delivered to the user;
-
 'erred':  only frames that based on unsuccessful RS or LDPC decoding/correcting
 or  based on the failed check of the FECF were found to contain errors will be delivered
 to the user;
- 'all':  all frames regardless if error free or not are delivered
 to the user; this includes telemetry frames for which due to lack of compatibility
 with the pertinent CCSDS Recommendations the quality cannot be determined.
-->
	<xsd:complexType name="RafPermittedFrameQualityNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:sequence>
					<xsd:element name="RafPermittedFrameQuality" type="RafPermittedFrameQuality"/>
				</xsd:sequence>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400.1.11.1.1"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RafPermittedFrameQuality"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="RafPermittedFrameQuality">
		<xsd:sequence minOccurs="1" maxOccurs="3">
			<xsd:element name="element">
				<xsd:simpleType>
					<xsd:restriction base="xsd:token">
						<xsd:enumeration value="good"/>
						<xsd:enumeration value="erred"/>
						<xsd:enumeration value="all"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!--
This enumerated parameter reports the quality of the frames that shall be delivered
 by the given RAF service instance. It can take on one of three values:
- 'good':
  only frames that based on successful RS or LDPC decoding/correcting and/or based
 on the check of the FECF are assumed to be error free will be delivered to the user;
-
 'erred':  only frames that based on unsuccessful RS or LDPC decoding/correcting
 and/or based on the failed check of the FECF were found to contain errors will be
 delivered to the user;
- 'all':  all frames regardless if error free or not are
 delivered to the user; this includes telemetry frames for which due to lack of compatibility
 with the pertinent CCSDS Recommendations the quality cannot be determined.
If the
 given service instance does not constrain this parameter to a single value, it shall
 be flagged 'undefined' whenever rafSvcInstanceState ≠ 'active'.
-->
	<xsd:simpleType name="RafRequestedFrameQuality">
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="good"/>
			<xsd:enumeration value="erred"/>
			<xsd:enumeration value="all"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This parameter configures and reports the minimum time in seconds between successive
 RAF-STATUS-REPORT invocations sent by the RAF service provider that may be requested
 in an RAF-SCHEDULE-STATUS-REPORT invocation. 
-->
	<xsd:complexType name="RafMinReportingCycleNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RafMinReportingCycle" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RafMinReportingCycle"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80400.1.13.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RafMinReportingCycle">
		<xsd:restriction base="MinAllowedReportingCycle"/>
	</xsd:simpleType>
	<!--
This parameter reports the current setting of the time in seconds between successive
 RAF-STATUS-REPORT invocations sent by the RAF service provider provided rafReportingCycle
 is 'on'. When rafReportingCycle is 'off', no cycle time is reported. 
-->
	<xsd:complexType name="RafReportingCycle">
		<xsd:complexContent>
			<xsd:extension base="SleReportingCycle"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This parameter reports the  total number of telemetry frames that have been annotated
 with a frame-quality of ‘good’ and delivered to the user since the start of the
 service instance provision period.
-->
	<xsd:simpleType name="RafNumberOfErrorFreeFramesDelivered">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="4294967295"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This parameter reports the  total number of telemetry frames that have been delivered
 to the user since the start of the service instance provision period.
-->
	<xsd:simpleType name="RafNumberOfFramesDelivered">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="4294967295"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This event notifies any change of the rafProdStat parameter. 
-->
	<!--
The event value reports the rafProdStat parameter value that applies since the notified
 rafProdStatChange event has occurred.
-->
	<xsd:simpleType name="RafProdStatChangeEvtValue">
		<xsd:restriction base="RafProdStat"/>
	</xsd:simpleType>
	<!--
This event triggers when one or more parameters controlling the configuration of
 service production of the service instance identified by the rafServiceInstanceId
 parameter have been changed.

This event carries no additional information.

-->
	<!--
The event-value of this event is 'empty'.
-->
	<xsd:simpleType name="RafProdConfigurationChangeEvtValue">
		<xsd:restriction base="ProdConfigurationChangeEvtValue"/>
	</xsd:simpleType>
	<!--
This event passes text messages intended for logs or operators involved in the ongoing
 service provision.
-->
	<!--
The messages passed by means of the rafOperatorNotify event are classified in terms
 of severity as 'info', 'warning' or 'alarm'. To simplify filtering and searching
 for specific messages, a unique numerical identifier is assigned to each message
 string. The messages are free text such that equipment specific issues can be reported.
 
-->
	<xsd:complexType name="RafOperatorNotifyMessage">
		<xsd:complexContent>
			<xsd:extension base="OperatorNotifyMessage"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This directive permits setting of the controllable parameters of the RafTsProvider
 FR type. 
-->
	<!--
The directive qualifier specifies the FR instance the directive shall act on and
 contains a set of parameter identifier and parameter value pairs. To be valid, the
 parameter identifier must reference a controllable parameter of the RafTsProvider
 FR and the parameter value must be of the same type as the parameter value that
 shall be set.
-->
	<xsd:complexType name="RafContrParamIdsAndValuesDirQual">
		<xsd:complexContent>
			<xsd:extension base="DirectiveQualifier"/>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
