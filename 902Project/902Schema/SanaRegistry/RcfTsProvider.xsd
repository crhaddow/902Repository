<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="urn:ccsds:schema:cssm:1.0.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:ccsds:schema:cssm:1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0">
	<xsd:include schemaLocation="frm_type_definitions.xsd"/>
	<xsd:include schemaLocation="AbstractFrStrataParameterSets.xsd"/>
	<!--
The RcfTsProvider accepts as input the frames provided by the FlfSyncAndChnlDecode
 and the OfflineFrameBuffer FRs. Furthermore, the RcfTsProvider FR type is specified
 to accept variable length frames delivered by the TcPlopSyncChnlDecode FR. It delivers
 the frames of the selected Master or Virtual Channel.
-->
	<xsd:element name="RcfTsProviderElement" type="RcfTsProviderType" substitutionGroup="DataTransferServicesStratumParameters"/>
	<xsd:complexType name="RcfTsProviderType">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:all>
					<xsd:element name="rcfSvcInstanceId" type="RcfSvcInstanceIdNamed" minOccurs="0"/>
					<xsd:element name="rcfInitiatorId" type="RcfInitiatorIdNamed" minOccurs="0"/>
					<xsd:element name="rcfResponderId" type="RcfResponderIdNamed" minOccurs="0"/>
					<xsd:element name="rcfResponderPortId" type="RcfResponderPortIdNamed" minOccurs="0"/>
					<xsd:element name="rcfRtnTimeoutPeriod" type="RcfRtnTimeoutPeriodNamed" minOccurs="0"/>
					<xsd:element name="rcfDeliveryMode" type="RcfDeliveryModeNamed" minOccurs="0"/>
					<xsd:element name="rcfLatencyLimit" type="RcfLatencyLimitNamed" minOccurs="0"/>
					<xsd:element name="rcfTransferBufferSize" type="RcfTransferBufferSizeNamed" minOccurs="0"/>
					<xsd:element name="rcfPermittedGvcidSet" type="RcfPermittedGvcidSetNamed" minOccurs="0"/>
					<xsd:element name="rcfMinReportingCycle" type="RcfMinReportingCycleNamed" minOccurs="0"/>
				</xsd:all>
				<xsd:attribute name="frin" type="xsd:string" use="optional"/>
				<xsd:attribute name="frTypeOid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500"/>
				<xsd:attribute name="frNickname" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This enumerated parameter reports the status of the service production process used
 by the given instance of an RCF service. It can take on the following values:
-
 'running':  the RCF production process is capable of processing a return link Master
 or Virtual Channel, if available;
- 'interrupted':  the RCF production process
 is stopped due to a fault;
- 'halted':  the RCF production process is stopped and
 production equipment is taken out of service due to management action.
-->
	<xsd:simpleType name="RcfProdStat">
		<xsd:restriction base="SleRtnProdStat"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the identifier of the given service instance.
 
-->
	<xsd:complexType name="RcfSvcInstanceIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RcfSvcInstanceId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RcfSvcInstanceId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500.1.2.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RcfSvcInstanceId">
		<xsd:restriction base="SleSvcInstanceId"/>
	</xsd:simpleType>
	<!--
This enumerated parameter reports the status of the given instance of the RCF service.
 It can take on the following values:
- 'unbound':  all resources required to enable
 the provision of the RCF service have been allocated, and all objects required to
 provide the service have been instantiated; however, no association yet exists between
 the user and the provider, i.e., the RCF transfer service provider port is not bound;
-
 'ready':  an association has been established between the user and the provider,
 and they may interact by means of the service operations. However, sending of telemetry
 frames from the provider to the user (by means of the RCF-TRANSFER-DATA operation)
 is not permitted; the user may enable the delivery of telemetry frames by means
 of the appropriate service operation (RCF-START), which, in turn, will cause the
 provider to transition to the state 'active';
- 'active':  this state resembles
 state ‘ready’, except that now the provider will send telemetry frames provided
 frames of the selected characteristics are made available by the RCF production
 process; the service continues in this state until the user invokes the RCF-STOP
 operation to cause the provider to suspend delivery of telemetry frames and transition
 back to state 'ready' or the PEER-ABORT invocation to cause the service to transition
 back to the 'unbound' state.
-->
	<xsd:simpleType name="RcfSvcInstanceState">
		<xsd:restriction base="SleSvcInstanceState"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the identifier of the peer application, i.e.,
 the authority on whose behalf the SLE application entity is initiating an association
 with the RCF service provider. The provider performs access control based on this
 parameter. It may also serve as key to further security relevant information such
 as the authentication level and method and the related password.

Given the security
 relevance of this parameter, specific mechanisms for setting this parameter when
 the FR instance is created and for the transfer of associated security relevant
 data might be specified in a bilateral agreement between service user and service
 provider. Also the accessibility by an MD-CSTS instance may be restricted.
-->
	<xsd:complexType name="RcfInitiatorIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RcfInitiatorId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RcfInitiatorId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500.1.4.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RcfInitiatorId">
		<xsd:restriction base="AuthorityIdentifier"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the identifier of the RCF application. The
 user performs access conrol based on this parameter. It may also serve as key to
 further security relevant information such as the authentication level and method
 and the related password.

Given the security relevance of this parameter, specific
 mechanisms for setting this parameter when the FR instance is created and for the
 transfer of associated security relevant data might be specified in a bilateral
 agreement between service user and service provider. Also the accessibility by an
 MD-CSTS instance may be restricted.
-->
	<xsd:complexType name="RcfResponderIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RcfResponderId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RcfResponderId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500.1.5.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RcfResponderId">
		<xsd:restriction base="AuthorityIdentifier"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the port identifier to be used by the user
 to connect to the service provider. However, the parameter value is only a logical
 name that needs to be translated into the technology-specific addressing information
 required to establish a connection with the specific port of the responding SLE
 application entity. As such this parameter is irrelevant for the service provider,
 but it may be needed for certain kind of gateways between service user and service
 provider application.
-->
	<xsd:complexType name="RcfResponderPortIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RcfResponderPortId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RcfResponderPortId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500.1.6.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RcfResponderPortId">
		<xsd:restriction base="ResponderPortId"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the setting of the maximum time period in seconds
 permitted from when a confirmed RCF operation is invoked until the return is received
 by the invoker.

If a response is not received within that time period, the invoker
 may invoke the PEER-ABORT operation.
-->
	<xsd:complexType name="RcfRtnTimeoutPeriodNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RcfRtnTimeoutPeriod" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RcfRtnTimeoutPeriod"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500.1.7.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RcfRtnTimeoutPeriod">
		<xsd:restriction base="SvcResponseTimeout"/>
	</xsd:simpleType>
	<!--
This enumerated parameter configures and reports the delivery mode of the given RCF
 service instance. It can take on three values:
- 'onlineTimely':  this delivery
 mode limits the size of the backlog of not yet delivered data that is allowed to
 accumulate by discarding data that cannot be delivered within a certain time. Furthermore,
 when data is discarded, it is discarded ‘in chunks’, i.e., as a sufficiently large
 block of contiguous frames rather than as random frames here and there; in general,
 this approach maximizes the usefulness of the data that is delivered.
- 'onlineComplete':
  this delivery mode attempts to deliver all acquired frames having the user selected
 characteristics, in order, with minimum delay consistent with the available ground
 communications bandwidth. To that end, the service provider has a buffer sufficiently
 large to deal with communications service delays, outages, and bandwidth limitations;
-
 'offline':  in this delivery mode, the provider side buffer (see OfflineFrameBuffer
 FR) enables data to be delivered hours or days after their acquisition. To that
 end, this buffer is sufficiently large to hold all data that might be accumulated
 during several space link sessions.
-->
	<xsd:complexType name="RcfDeliveryModeNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RcfDeliveryMode" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RcfDeliveryMode"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500.1.8.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RcfDeliveryMode">
		<xsd:restriction base="SleRtnDeliveryMode"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the maximum allowable delivery latency time,
 in seconds, for the online delivery modes, i.e., the maximum delay from when the
 frame has been acquired by the provider until it is delivered to the user. This
 parameter shall be flagged as undefined if rcfDeliveryMode = 'offline'.
-->
	<!--
 The engineering unit of this parameter is second.
 -->
	<xsd:complexType name="RcfLatencyLimitNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RcfLatencyLimit" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RcfLatencyLimit"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500.1.9.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RcfLatencyLimit">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="1"/>
			<xsd:maxInclusive value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This parameter configures and reports the number of frames the provider shall block
 in one RCF-PDU before passing it to the underlying communications layer except if
 expiry of rcfLatencyLimit requires earlier release of the RCF-PDU. If rcfDeliveryMode
 = 'offline', rcfLatencyLimit has no effect.
-->
	<xsd:complexType name="RcfTransferBufferSizeNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RcfTransferBufferSize" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RcfTransferBufferSize"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500.1.10.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RcfTransferBufferSize">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="1"/>
			<xsd:maxInclusive value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This parameter configures and reports the set of Master and/or Virtual Channel that
 the given RCF service instance permits the user to select. The parameter is a set
 of the concatenation of the CCSDS assigned Spacecraft Identifier (SCID), the Transfer
 Frame Version Number (TFVN) and, if applicable, the Virtual Channel Identifier (VCID).
 The range of the Spacecraft Identifier and the Virtual Channel Identifier depend
 on the TFVN as follows:
- TFVN = binary '00' (version 1) - SCID = (0 .. 1023),
 VCID = (0 .. 7);
- TFVN = binary '01' (version 2) - SCID = (0 .. 255), VCID = (0
 .. 63);
- TFVN = binary '1100' (version 4) - SCID = (0 .. 65535), VCID = (0 ..
 63).
-->
	<xsd:complexType name="RcfPermittedGvcidSetNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:sequence>
					<xsd:element name="RcfPermittedGvcidSet" type="RcfPermittedGvcidSet"/>
				</xsd:sequence>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500.1.11.1.1"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RcfPermittedGvcidSet"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="RcfPermittedGvcidSet">
		<xsd:choice>
			<xsd:element name="tm">
				<xsd:complexType>
					<xsd:sequence minOccurs="1" maxOccurs="9216">
						<xsd:element name="element">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="tfvn">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
            The TFVN of TM frames is version 1 (binary '00').
            -->
												<xsd:simpleType>
													<xsd:restriction base="BitString"/>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="scid">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:integer">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="1023"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="vcid">
										<xsd:complexType>
											<xsd:choice>
												<xsd:element name="masterChannel">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<!--
              For the Master Channel the vcid remains unspecified.
              -->
															<xsd:simpleType>
																<xsd:restriction base="NULL"/>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="virtualChannel">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<xsd:simpleType>
																<xsd:restriction base="xsd:integer">
																	<xsd:minInclusive value="0"/>
																	<xsd:maxInclusive value="7"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
											</xsd:choice>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="aos">
				<xsd:complexType>
					<xsd:sequence minOccurs="1" maxOccurs="16640">
						<xsd:element name="element">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="tfvn">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
            The TFVN of AOS frames is version 2 (binary '01').
            -->
												<xsd:simpleType>
													<xsd:restriction base="BitString"/>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="scid">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:integer">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="255"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="vcid">
										<xsd:complexType>
											<xsd:choice>
												<xsd:element name="masterChannel">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<!--
              For the Master Channel the vcid remains unspecified.
              -->
															<xsd:simpleType>
																<xsd:restriction base="NULL"/>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="virtualChannel">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<xsd:simpleType>
																<xsd:restriction base="xsd:integer">
																	<xsd:minInclusive value="0"/>
																	<xsd:maxInclusive value="63"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
											</xsd:choice>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="uslp">
				<xsd:complexType>
					<xsd:sequence minOccurs="1" maxOccurs="4194304">
						<xsd:element name="element">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="tfvn">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
            The TFVN of USLP frames is version 4 (binary '1100').
            -->
												<xsd:simpleType>
													<xsd:restriction base="BitString"/>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="scid">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:integer">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="65535"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="vcid">
										<xsd:complexType>
											<xsd:choice>
												<xsd:element name="masterChannel">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<!--
              For the Master Channel the vcid remains unspecified.
              -->
															<xsd:simpleType>
																<xsd:restriction base="NULL"/>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="virtualChannel">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<xsd:simpleType>
																<xsd:restriction base="xsd:integer">
																	<xsd:minInclusive value="0"/>
																	<xsd:maxInclusive value="63"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
											</xsd:choice>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<!--
This parameter reports the Master or Virtual Channel that the given RCF service instance
 shall deliver to the user. The parameter is the concatenation of the CCSDS assigned
 Spacecraft Identifier (SCID), the Transfer Frame Version Number (TFVN) and, if applicable,
 the Virtual Channel Identifier (VCID). The range of the Spacecraft Identifier and
 the Virtual Channel Identifier depend on the TFVN as follows:
- TFVN = binary '00'
 (version 1) - SCID = (0 .. 1023), VCID = (0 .. 7);
- TFVN = binary '01' (version
 2) - SCID = (0 .. 255), VCID = (0 .. 63);
- TFVN = binary '1100' (version 4) -
 SCID = (0 .. 65535), VCID = (0 .. 63).

If the global VCID is not constrained
 to a single value by the given RCF service instance (see rcfPermittedGvcidSet),
 then this parameter shall be flagged undefined as long as rcfSvcInstanceState ≠
 'active'.
-->
	<xsd:complexType name="RcfRequestedGvcid">
		<xsd:choice>
			<xsd:element name="tm">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="tfvn">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
        The TFVN of TM frames is version 1 (binary '00').
        -->
									<xsd:simpleType>
										<xsd:restriction base="BitString"/>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="scid">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="1023"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vcid">
							<xsd:complexType>
								<xsd:choice>
									<xsd:element name="masterChannel">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
          In case the Master Channel is selected, the VCID remains unspecified.
          -->
												<xsd:simpleType>
													<xsd:restriction base="NULL"/>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="vcid">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:integer">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="7"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
								</xsd:choice>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="aos">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="tfvn">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
        The TFVN of AOS frames is version 2 (binary '01').
        -->
									<xsd:simpleType>
										<xsd:restriction base="BitString"/>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="scid">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="255"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vcid">
							<xsd:complexType>
								<xsd:choice>
									<xsd:element name="masterChannel">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
          When a Master Channel is selected, the VCID remains unspecified.
          -->
												<xsd:simpleType>
													<xsd:restriction base="NULL"/>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="virtualChannel">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:integer">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="63"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
								</xsd:choice>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="uslp">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="tfvn">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
        The TFVN of USLP frames is version 4 (binary '1100').
        -->
									<xsd:simpleType>
										<xsd:restriction base="BitString"/>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="scid">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="65535"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="vcid">
							<xsd:complexType>
								<xsd:choice>
									<xsd:element name="masterChannel">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
          For the Master Channel the vcid remains unspecified.
          -->
												<xsd:simpleType>
													<xsd:restriction base="NULL"/>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="virtualChannel">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:integer">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="63"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
								</xsd:choice>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<!--
This parameter configures and reports the minimum time in seconds between successive
 RCF-STATUS-REPORT invocations sent by the RCF service provider that may be requested
 in an RCF-SCHEDULE-STATUS-REPORT invocation. 
-->
	<xsd:complexType name="RcfMinReportingCycleNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="RcfMinReportingCycle" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="RcfMinReportingCycle"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80500.1.13.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="RcfMinReportingCycle">
		<xsd:restriction base="MinAllowedReportingCycle"/>
	</xsd:simpleType>
	<!--
This parameter reports if cyclic reporting is active and if so it reports  the current
 setting of the time in seconds between successive RCF-STATUS-REPORT invocations
 sent by the RCF service provider. 
-->
	<xsd:complexType name="RcfReportingCycle">
		<xsd:complexContent>
			<xsd:extension base="SleReportingCycle"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This parameter reports the total number of telemetry frames that have been delivered
 to the user since the start of the service instance provision period.
-->
	<xsd:simpleType name="RcfNumberOfFramesDelivered">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="4294967295"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This event notifies any change of the rcfProdtat parameter value. 
-->
	<!--
The event value reports the rcfProdStat parameter value that applies since the notified
 rcfProdStatChange event has occurred.
-->
	<xsd:simpleType name="RcfProdStatChangeEvtValue">
		<xsd:restriction base="RcfProdStat"/>
	</xsd:simpleType>
	<!--
This event triggers when one or more parameters controlling the configuration of
 service production of the service instance identified by the rcfSvcInstanceId parameter
 have been changed.

This event carries no additional information.

-->
	<!--
The event value of this event is 'empty'.
-->
	<xsd:simpleType name="RcfProdConfigurationChangeEvtValue">
		<xsd:restriction base="ProdConfigurationChangeEvtValue"/>
	</xsd:simpleType>
	<!--
This event passes text messages intended for logs or operators involved in the ongoing
 service provision.
-->
	<!--
The messages passed by means of the rcfOperatorNotify event are classified in terms
 of severity as 'info', 'warning' or 'alarm'. To simplify filtering and searching
 for specific messages, a unique numerical identifier is assigned to each message
 string. The messages are free text such that equipment specific issues can be reported.
 
-->
	<xsd:complexType name="RcfOperatorNotifyMessage">
		<xsd:complexContent>
			<xsd:extension base="OperatorNotifyMessage"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This directive permits setting of the controllable parameters of the RcfTsProvider
 FR type. 
-->
	<!--
The directive qualifier specifies the FR instance the directive shall act on and
 contains a set of parameter identifier and parameter value pairs. To be valid, the
 parameter identifier must reference a controllable parameter of the RcfTsProvider
 FR and the parameter value must be of the same type as the parameter value that
 shall be set.
-->
	<xsd:complexType name="RcfContrParamIdsAndValuesDirQual">
		<xsd:complexContent>
			<xsd:extension base="DirectiveQualifier"/>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
