<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="urn:ccsds:schema:cssm:1.0.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:ccsds:schema:cssm:1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0">
	<xsd:include schemaLocation="frm_type_definitions.xsd"/>
	<xsd:include schemaLocation="AbstractFrStrataParameterSets.xsd"/>
	<!--
The FlfSyncAndChnlDecode FR accepts as input the symbol stream from the Ccsds401SpaceLinkCarrierRcpt
 FR. It provides the decoded and annotated telemetry frames to the RafTsProvider,
 the RcfTsProvider, the RocfTsProvider, to the McDemuxReception and to the TmFrameDataSink
 FRs.
-->
	<xsd:element name="FlfSyncAndChnlDecodeElement" type="FlfSyncAndChnlDecodeType" substitutionGroup="SynchronizationandChannelCodingStratumParameters"/>
	<xsd:complexType name="FlfSyncAndChnlDecodeType">
		<xsd:complexContent>
			<xsd:extension base="SynchronizationandChannelCodingStratumType">
				<xsd:all>
					<xsd:element name="flfSyncDecAsmConfig" type="FlfSyncDecAsmConfigNamed" minOccurs="0"/>
					<xsd:element name="flfSyncDecCaduLength" type="FlfSyncDecCaduLengthNamed" minOccurs="0"/>
					<xsd:element name="flfSyncDecDerandomization" type="FlfSyncDecDerandomizationNamed" minOccurs="0"/>
					<xsd:element name="flfSyncDecDecode" type="FlfSyncDecDecodeNamed" minOccurs="0"/>
					<xsd:element name="flfSyncDecFecfPresent" type="FlfSyncDecFecfPresentNamed" minOccurs="0"/>
				</xsd:all>
				<xsd:attribute name="frin" type="xsd:string" use="optional"/>
				<xsd:attribute name="frTypeOid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.30300"/>
				<xsd:attribute name="frNickname" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This enumerated parameter reports the fixed length frame synchronization and decoding
 resource status and can take on four values:
- 'configured':  the synchronization
 and decoding equipment has been configured, but no incoming symbol stream is present;
-
 'operational':  the telemetry reception is active, i.e., all syncronization and
 decoding is in nominal condition;
- 'interrupted':  a failure has been detected,
 e.g. the incoming data cannot be decoded;
- 'halted':  the telemetry reception
 has been taken out of service. 
-->
	<xsd:simpleType name="FlfSyncDecResourceStat">
		<xsd:restriction base="ResourceStat"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the ASM pattern, the frame synchronizer behavior
 in terms of the correlation error threshold for declaring 'ASM lock' and for declaring
 'ASM out of lock', the number of consecutive frames with 'ASM lock' required to
 transition from 'notLocked' to 'verify', the number of consecutive frames with 'ASM
 lock' required to transition from 'verify' to 'locked' and the number of consecutive
 frames with 'ASM out of lock' required to transition from 'locked' to 'notLocked'
 and the to be tolerated ASM position error in number of symbols (i.e. unexpected
 frame length) for not triggering the transition to 'notLocked'. 
-->
	<xsd:complexType name="FlfSyncDecAsmConfigNamed">
		<xsd:complexContent>
			<xsd:extension base="SynchronizationandChannelCodingStratumType">
				<xsd:sequence>
					<xsd:element name="FlfSyncDecAsmConfig" type="FlfSyncDecAsmConfig"/>
				</xsd:sequence>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.30300.1.2.1.1"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FlfSyncDecAsmConfig"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FlfSyncDecAsmConfig">
		<xsd:sequence>
			<xsd:element name="asmPattern">
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="ccsdsPattern">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="NULL"/>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="nonCcsdsPattern">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
         The length of the ASM pattern is indirectly specified by the length of the octet string.
         -->
									<xsd:simpleType>
										<xsd:restriction base="xsd:hexBinary"/>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="asmThresholds">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="asmCorrelationLockThreshold">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="191"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="asmCorrelationOutOfLockThreshold">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="1"/>
											<xsd:maxInclusive value="192"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="verifyThreshold">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="1"/>
											<xsd:maxInclusive value="15"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="lockedThreshold">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="1"/>
											<xsd:maxInclusive value="15"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="notLockedThreshold">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="1"/>
											<xsd:maxInclusive value="15"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="frameLengthErrorThreshold">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
         in number of symbols
         -->
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="-10"/>
											<xsd:maxInclusive value="10"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!--
This parameter reports the number of symbols in the most recently received ASM that
 differ from the nominal ASM pattern. When comparing these numbers, one needs to
 take into consideration whether the synchronization is done on the (pre Viterbi
 decoder) symbol stream or on the (post Viterbi decoder) bit stream which may be
 the case if flfSyncDecDecode is either 'convolutional' or 'concatenated'.
The frame
 synchronization is also used to remove the phase ambiguity of some modulation schemes.
 To that end, the correlation process is performed both for the standard ASM pattern
 and its inversion.
A given implementation will specify if the synchronization is
 performed in the symbol or bit domain. This shall be recorded in the Service Agreement.
-->
	<xsd:simpleType name="FlfSyncDecAsmCorrelationError">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="192"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This enumerated parameter reports the frame synchronizer lock status. It can take
 on the following values:
- 'notLocked':  the frame synchronizer has just started
 looking for ASMs or has been in the 'locked' or 'verify' status and the specified
 number of frames has been processed without finding an ASM with correlation and
 position error limit below the acceptable limit specified in flfSyncDecAsmConfig;
 
- 'locked':  The synchronizer has been in the 'verify' status and then has found
 the specified number of Attached Sync Markers required for the transition to 'locked'
 with the expected number of symbols or bits between them and with each ASM having
 a correlation error that is lower than the configured error limit (see flfSyncDecAsmConfig);
-
 'verify':  the frame synchronizer is 'notLocked' and has found one ASM in the symbol
 or bit stream with the correlation error lower than the configured threshold; it
 is looking for further ASMs at the expected number of symbols or bits after the
 previous ASM; if the number specified in flfSyncDecAsmConfig of such ASMs is found,
 the lock status changes to 'verify'; if such ASMs are not found where expected,
 the lock status remains 'not locked'; if an ASM is found, but at a larger distance
 in terms of symbols or bits than expected, that newly found ASM will be the reference
 for searching the next verification ASM.

-->
	<xsd:simpleType name="FlfSyncDecFrameSyncLockStat">
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="notLocked"/>
			<xsd:enumeration value="locked"/>
			<xsd:enumeration value="verify"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This enumerated parameter reports if, based on the observed polarity of the ASM,
 the symbol stream had to be inverted or not. It can take two values:
- 'yes': 
 the frame synchronizer locked on the inverted ASM pattern and therefore inverts
 the polarity of the symbol stream;
- 'no':  the frame synchronizer locked on the
 ASM with the pattern in positive logic and therefore does not invert the symbol
 stream.
As long as flfSyncDecFrameSyncLockStat ≠ 'locked', this parameter shall
 be flagged as unavailable.
-->
	<xsd:simpleType name="FlfSyncDecSymbolInversion">
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="yes"/>
			<xsd:enumeration value="no"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
The parameter reports the ratio of erred frames to the total number of frames processed
 for the most recent n frames. The value of n shall be documented in the Service
 Agreement. If the frames are RS or LDPC encoded, then frames for which the RS or
 LDPC correction is not possible are considered erred. Frames are also considered
 erred if the FECF is present and the check of the FECF is negative. In all other
 cases, i.e., if the frames are neither RS nor LDPC encoded nor do they contain a
 CCSDS compliant FECF, this parameter shall be flagged as 'undefined'.
-->
	<xsd:simpleType name="FlfSyncDecFrameErrorRate">
		<xsd:restriction base="xsd:double">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="1"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This parameter reports the number of bits in the frame corrected by means of the
 RS trailer. The number of bits that can be corrected depends on the coding and the
 interleaving depth. If flfSyncDecDecode is neither 'reedSolomon' nor 'concatenated',
 this parameter shall be flagged as 'undefined'.
-->
	<xsd:simpleType name="FlfSyncDecNumberOfRsErrorsCorrected">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="128"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This enumerated parameter reports if the time tags used to annotate the telemetry
 frames with the Earth Receive Time (ERT) are generated by a time code generator
 slaved to a high precision reference or if this generator is free running. It can
 take on two values:
- 'no':  the system generating the time tags is free-running;
-
 'yes':  the time tags are generated by a system that is locked to the station's
 frequency and timing system.
 
-->
	<xsd:simpleType name="FlfSyncDecErtAnnotationLockedToReference">
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="no"/>
			<xsd:enumeration value="yes"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This parameter configures and reports the length in octets of the CADU the frame
 synchronizer shall attempt to lock on. Depending on the implementation, the frame
 synchronizer may operate on the convolutionally encoded symbol stream or the already
 convolutionally decoded symbol stream, if convolutional encoding is applied at all.
-->
	<xsd:complexType name="FlfSyncDecCaduLengthNamed">
		<xsd:complexContent>
			<xsd:extension base="SynchronizationandChannelCodingStratumType">
				<xsd:attribute name="value" type="FlfSyncDecCaduLength" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FlfSyncDecCaduLength"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.30300.1.9.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FlfSyncDecCaduLength">
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="48"/>
			<xsd:maxInclusive value="32768"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This enumerated parameter configures and reports if the FR is configured to derandomize
 the incoming frames. This parameter can take on two values:
- 'noDerandomization';
-
 'derandomization'.

The details regarding the randomization are specified in CCSDS
 131.0-B-3. Randomization is strongly advised, but mandatory only for punctured convolutional
 codes and for LDPC encoded slices.  
-->
	<xsd:complexType name="FlfSyncDecDerandomizationNamed">
		<xsd:complexContent>
			<xsd:extension base="SynchronizationandChannelCodingStratumType">
				<xsd:attribute name="value" type="FlfSyncDecDerandomization" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FlfSyncDecDerandomization"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.30300.1.10.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FlfSyncDecDerandomization">
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="noDerandomization"/>
			<xsd:enumeration value="derandomization"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This parameter configures and reports the decoding the FlfSyncAndDecode FR is configured
 to apply to the incoming frames. This parameter can take on the following values:
-
 'no decoding';
- 'convolutional';
- 'reedSolomon';
- 'concatenated';
- 'turbo';
-
 'ldpc';
- 'slicedLdpc'.
For the configured decoding option the parameter also
 specifies the associated configuration details.

Note: The length and pattern
 of the ASM is implicitly specified by the decoding that is to be applied except
 if for parameter flfSyncDecAsmConfig the nonCcsds asmPattern choice is selected.
-->
	<xsd:complexType name="FlfSyncDecDecodeNamed">
		<xsd:complexContent>
			<xsd:extension base="SynchronizationandChannelCodingStratumType">
				<xsd:sequence>
					<xsd:element name="FlfSyncDecDecode" type="FlfSyncDecDecode"/>
				</xsd:sequence>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.30300.1.11.1.1"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FlfSyncDecDecode"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FlfSyncDecDecode">
		<xsd:sequence>
			<xsd:element name="differentialDecode">
				<xsd:complexType>
					<xsd:attribute name="value" use="required">
						<!--
       If applicable, the CCSDS recommendation is NRZ-M.
       -->
						<xsd:simpleType>
							<xsd:restriction base="xsd:token">
								<xsd:enumeration value="notApplicable"/>
								<xsd:enumeration value="inputIsNrzM"/>
								<xsd:enumeration value="inputIsNrzS"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="symbolDecode">
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="noDecoding">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="NULL"/>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="convolutional" type="ConvolutionalCodeConfiguration"/>
						<xsd:element name="reedSolomon">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="rsCorrectionCapabilty">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:token">
														<xsd:enumeration value="corrects8"/>
														<xsd:enumeration value="corrects16"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="rsInterleavingDepth">
										<xsd:complexType>
											<xsd:attribute name="value" type="RsInterleavingDepth" use="required"/>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="concatenated">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="convolutional" type="ConvolutionalCodeConfiguration"/>
									<xsd:element name="rsCorrectionCapabilty">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:token">
														<xsd:enumeration value="corrects8"/>
														<xsd:enumeration value="corrects16"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="rsInterleavingDepth">
										<xsd:complexType>
											<xsd:attribute name="value" type="RsInterleavingDepth" use="required"/>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="turbo">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="maxNumberOfIterations">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:integer">
														<xsd:minInclusive value="1"/>
														<xsd:maxInclusive value="20"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="codeRate">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:token">
														<xsd:enumeration value="rate1Over2"/>
														<xsd:enumeration value="rate1Over3"/>
														<xsd:enumeration value="rate1Over4"/>
														<xsd:enumeration value="rate1Over6"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="ldpc">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
         The information block length shall be derived from the CADU length (see flfSyncCaduLength)
         -->
									<xsd:simpleType>
										<xsd:restriction base="xsd:token">
											<xsd:enumeration value="rate1Over2"/>
											<xsd:enumeration value="rate2Over3"/>
											<xsd:enumeration value="rate4Over5"/>
											<xsd:enumeration value="rate223Over255"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="slicedLdpc">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="codeBlockSize">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
           Number of LDPC codewords 
           -->
												<xsd:simpleType>
													<xsd:restriction base="xsd:integer">
														<xsd:pattern value="1|2|3|4|5|6|7|8"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="codeRateAndSliceLength">
										<xsd:complexType>
											<xsd:choice>
												<xsd:element name="codeRate1Over2">
													<xsd:complexType>
														<xsd:sequence>
															<xsd:element name="codeRate">
																<xsd:complexType>
																	<xsd:attribute name="value" type="LdpcCodeRate" use="required"/>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="sliceLength">
																<xsd:complexType>
																	<xsd:attribute name="value" use="required">
																		<xsd:simpleType>
																			<xsd:restriction base="xsd:integer">
																				<xsd:pattern value="1024|4096|16384"/>
																			</xsd:restriction>
																		</xsd:simpleType>
																	</xsd:attribute>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="csmPattern">
																<xsd:complexType>
																	<xsd:choice>
																		<xsd:element name="ccsds">
																			<xsd:complexType>
																				<xsd:attribute name="value" use="required">
																					<xsd:simpleType>
																						<xsd:restriction base="xsd:hexBinary"/>
																					</xsd:simpleType>
																				</xsd:attribute>
																			</xsd:complexType>
																		</xsd:element>
																		<xsd:element name="nonCCSDS">
																			<xsd:complexType>
																				<xsd:attribute name="value" use="required">
																					<xsd:simpleType>
																						<xsd:restriction base="xsd:hexBinary">
																							<xsd:minLength value="4"/>
																							<xsd:maxLength value="16"/>
																						</xsd:restriction>
																					</xsd:simpleType>
																				</xsd:attribute>
																			</xsd:complexType>
																		</xsd:element>
																	</xsd:choice>
																</xsd:complexType>
															</xsd:element>
														</xsd:sequence>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="codeRate2Over3">
													<xsd:complexType>
														<xsd:sequence>
															<xsd:element name="codeRate">
																<xsd:complexType>
																	<xsd:attribute name="value" type="LdpcCodeRate" use="required"/>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="sliceLength">
																<xsd:complexType>
																	<xsd:attribute name="value" use="required">
																		<xsd:simpleType>
																			<xsd:restriction base="xsd:integer">
																				<xsd:pattern value="1024|4096|16384"/>
																			</xsd:restriction>
																		</xsd:simpleType>
																	</xsd:attribute>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="csmPattern">
																<xsd:complexType>
																	<xsd:choice>
																		<xsd:element name="ccsds">
																			<xsd:complexType>
																				<xsd:attribute name="value" use="required">
																					<xsd:simpleType>
																						<xsd:restriction base="xsd:hexBinary"/>
																					</xsd:simpleType>
																				</xsd:attribute>
																			</xsd:complexType>
																		</xsd:element>
																		<xsd:element name="nonCCSDS">
																			<xsd:complexType>
																				<xsd:attribute name="value" use="required">
																					<xsd:simpleType>
																						<xsd:restriction base="xsd:hexBinary">
																							<xsd:minLength value="4"/>
																							<xsd:maxLength value="16"/>
																						</xsd:restriction>
																					</xsd:simpleType>
																				</xsd:attribute>
																			</xsd:complexType>
																		</xsd:element>
																	</xsd:choice>
																</xsd:complexType>
															</xsd:element>
														</xsd:sequence>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="codeRate4Over5">
													<xsd:complexType>
														<xsd:sequence>
															<xsd:element name="codeRate">
																<xsd:complexType>
																	<xsd:attribute name="value" type="LdpcCodeRate" use="required"/>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="sliceLength">
																<xsd:complexType>
																	<xsd:attribute name="value" use="required">
																		<xsd:simpleType>
																			<xsd:restriction base="xsd:integer">
																				<xsd:pattern value="1024|4096|16384"/>
																			</xsd:restriction>
																		</xsd:simpleType>
																	</xsd:attribute>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="csmPattern">
																<xsd:complexType>
																	<xsd:choice>
																		<xsd:element name="ccsds">
																			<xsd:complexType>
																				<xsd:attribute name="value" use="required">
																					<xsd:simpleType>
																						<xsd:restriction base="xsd:hexBinary"/>
																					</xsd:simpleType>
																				</xsd:attribute>
																			</xsd:complexType>
																		</xsd:element>
																		<xsd:element name="nonCCSDS">
																			<xsd:complexType>
																				<xsd:attribute name="value" use="required">
																					<xsd:simpleType>
																						<xsd:restriction base="xsd:hexBinary">
																							<xsd:minLength value="4"/>
																							<xsd:maxLength value="16"/>
																						</xsd:restriction>
																					</xsd:simpleType>
																				</xsd:attribute>
																			</xsd:complexType>
																		</xsd:element>
																	</xsd:choice>
																</xsd:complexType>
															</xsd:element>
														</xsd:sequence>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="codeRate223Over255">
													<xsd:complexType>
														<xsd:sequence>
															<xsd:element name="codeRate">
																<xsd:complexType>
																	<xsd:attribute name="value" type="LdpcCodeRate" use="required"/>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="sliceLength">
																<xsd:complexType>
																	<xsd:attribute name="value" use="required">
																		<xsd:simpleType>
																			<xsd:restriction base="xsd:integer">
																				<xsd:pattern value="7136"/>
																			</xsd:restriction>
																		</xsd:simpleType>
																	</xsd:attribute>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="csmPattern">
																<xsd:complexType>
																	<xsd:choice>
																		<xsd:element name="ccsds">
																			<xsd:complexType>
																				<xsd:attribute name="value" use="required">
																					<xsd:simpleType>
																						<xsd:restriction base="xsd:hexBinary"/>
																					</xsd:simpleType>
																				</xsd:attribute>
																			</xsd:complexType>
																		</xsd:element>
																		<xsd:element name="nonCCSDS">
																			<xsd:complexType>
																				<xsd:attribute name="value" use="required">
																					<xsd:simpleType>
																						<xsd:restriction base="xsd:hexBinary">
																							<xsd:minLength value="4"/>
																							<xsd:maxLength value="16"/>
																						</xsd:restriction>
																					</xsd:simpleType>
																				</xsd:attribute>
																			</xsd:complexType>
																		</xsd:element>
																	</xsd:choice>
																</xsd:complexType>
															</xsd:element>
														</xsd:sequence>
													</xsd:complexType>
												</xsd:element>
											</xsd:choice>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!--
This parameter configures and reports if in the frame to be processed the FECF is
 present. It can take on two values:
- 'no';
- 'yes'.

-->
	<xsd:complexType name="FlfSyncDecFecfPresentNamed">
		<xsd:complexContent>
			<xsd:extension base="SynchronizationandChannelCodingStratumType">
				<xsd:attribute name="value" type="FlfSyncDecFecfPresent" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FlfSyncDecFecfPresent"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.30300.1.12.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FlfSyncDecFecfPresent">
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="no"/>
			<xsd:enumeration value="yes"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This parameter provides decoding type specific quality indications regarding the
 decoding process and an estimate of the bit error rate (BER).

The provided BER
 estimates are not precise. The ASM pattern derived estimate does not reflect the
 coding gain (except that related to convolutional coding). The RS decoding derived
 BER estimate also disregards the RS coding gain, but also disregards the errors
 associated with not decodable RS code words. However, the number of not decodable
 RS codewords are reported indirectly by the element ratioBadCodeWordsToTotalCountOfCodeWordsInTheSample.
 The BER estimates are determined for n consecutive frames where the value of n shall
 be documented by the provider.
-->
	<xsd:complexType name="FlfSyncDecDecodeQualityIndications">
		<xsd:sequence>
			<xsd:element name="countOfFramesProcessed">
				<xsd:complexType>
					<xsd:attribute name="value" use="required">
						<!--
      This count rolls over to zero.
      -->
						<xsd:simpleType>
							<xsd:restriction base="xsd:integer">
								<xsd:minInclusive value="0"/>
								<xsd:maxInclusive value="4294967295"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="berEstimates">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="asmDerivedBerEstimate">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
        Ratio of erred ASM bits to total count of ASM bits evaluated in n consecutive frames where the value of n shall be documented by the provider.
        -->
									<xsd:simpleType>
										<xsd:restriction base="xsd:double">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="1"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="rsDerivedBerEstimate">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
        Ratio of sum of corrected bits in the RS code words to total count of bits in the code words in n consecutive frames where the value of n shall be documented by the provider. Not decodable code words shall be disregarded.
        -->
									<xsd:simpleType>
										<xsd:restriction base="xsd:double">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="7E-2"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="qualityIndications">
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="noDecoding">
							<xsd:complexType>
								<xsd:choice>
									<xsd:element name="fecfAbsent">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
          No quality indication possible.
          -->
												<xsd:simpleType>
													<xsd:restriction base="NULL"/>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="fecfPresent">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
          Ratio of frames with bad FECF to the total count of frames over the most recent n frames. The value of n shall be documented by the provider.
          -->
												<xsd:simpleType>
													<xsd:restriction base="xsd:double">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="1"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
								</xsd:choice>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="convolutional">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
        The Viterbi decoder does not provide specific quality indications.
        -->
									<xsd:simpleType>
										<xsd:restriction base="NULL"/>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="reedSolomonOrConcatenated">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="rsDecoderLockStatus">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:token">
														<xsd:enumeration value="notLocked"/>
														<xsd:enumeration value="locked"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="countOfRsCodeWordsProcessed">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
          This count rolls over to zero.
          -->
												<xsd:simpleType>
													<xsd:restriction base="xsd:integer">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="4294967295"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="ratioBadCodeWordsToTotalCountOfCodeWordsInTheSample">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
          This ratio is valid for the most recent n code words processed. The value of n shall be documented by the provider.
          -->
												<xsd:simpleType>
													<xsd:restriction base="xsd:double">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="1"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="turbo">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="turboDecoderLockStatus">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:token">
														<xsd:enumeration value="notLocked"/>
														<xsd:enumeration value="locked"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="iterationsCount">
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="maxNumberOfIterationsPerFrame">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<!--
            Value for the most recent n frames. The value of n shall be documented by the provider.
            -->
															<xsd:simpleType>
																<xsd:restriction base="xsd:integer">
																	<xsd:minInclusive value="1"/>
																	<xsd:maxInclusive value="20"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="averageNumberOfIterationsPerFrame">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<!--
            The average number multiplied with 1000. The average shall be calculated for the most recent n frames processed. The value of n shall be documented by the provider.
            -->
															<xsd:simpleType>
																<xsd:restriction base="xsd:integer">
																	<xsd:minInclusive value="1000"/>
																	<xsd:maxInclusive value="20000"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="ratioBadFramesToTotalCountOfFramesInTheSample">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
          Ratio valid for the most recent n frames processed. The value of n shall be documented by the provider.
          -->
												<xsd:simpleType>
													<xsd:restriction base="xsd:double">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="1"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="ldpc">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="ldpcDecoderLockStatus">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<xsd:simpleType>
													<xsd:restriction base="xsd:token">
														<xsd:enumeration value="notLocked"/>
														<xsd:enumeration value="locked"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="iterationsCount">
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="maxNumberOfIterationsPerFrame">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<!--
            Value for the most recent n frames. The value of n shall be documented in the Service Agreement.
            -->
															<xsd:simpleType>
																<xsd:restriction base="xsd:integer">
																	<xsd:minInclusive value="1"/>
																	<xsd:maxInclusive value="2047"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="averageNumberOfIterationsPerFrame">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<!--
            The average number multiplied with 1000. The average shall be calculated for the most recent n frames processed. The value of n shall be documented in the ServiceAgreement.
            -->
															<xsd:simpleType>
																<xsd:restriction base="xsd:integer">
																	<xsd:minInclusive value="1000"/>
																	<xsd:maxInclusive value="2047000"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
									<xsd:element name="ratioBadFramesToTotalCountOfFramesInTheSample">
										<xsd:complexType>
											<xsd:attribute name="value" use="required">
												<!--
          Ratio valid for the most recent n frames processed. The value of n shall be documented by the provider.
          -->
												<xsd:simpleType>
													<xsd:restriction base="xsd:double">
														<xsd:minInclusive value="0"/>
														<xsd:maxInclusive value="1"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:attribute>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!--
This event notifies any change of the flfSyncDecResourceStat parameter value.  
-->
	<!--
The event value reports the flfSyncDecResourceStat parameter value that applies since
 the notified flfSyncDecResourceStatChange event has occurred.
-->
	<xsd:simpleType name="FlfSyncDecResourceStatChangeEvtValue">
		<xsd:restriction base="FlfSyncDecResourceStat"/>
	</xsd:simpleType>
	<!--
This event notifies any change of flfSyncDecFrameSyncLockStat and the value of flfSyncDecFrameSyncLockStat
 that applies since the event has occurred. 
-->
	<!--
The event value reports the flfSyncFrameSyncLockStat value that applies since the
 notified flfSyncDecFrameSyncLockStatChange event has occurred.
-->
	<xsd:simpleType name="FlfSyncDecFrameSyncLockStatChangeEvtValue">
		<xsd:restriction base="FlfSyncDecFrameSyncLockStat"/>
	</xsd:simpleType>
	<!--
This event passes text messages intended for logs or operators involved in the ongoing
 service provision.
-->
	<!--
The messages passed by means of the flfSyncDecOperatorNotify event are classified
 in terms of severity as 'info', 'warning' or 'alarm'. To simplify filtering and
 searching for specific messages, a unique numerical identifier is assigned to each
 message string. The messages are free text such that equipment specific issues can
 be reported. 
-->
	<xsd:complexType name="FlfSyncDecOperatorNotifyMessage">
		<xsd:complexContent>
			<xsd:extension base="OperatorNotifyMessage"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This directive permits setting of the controllable parameters of the FlfSyncAndChnlDecode
 FR type.  
-->
	<!--
The directive qualifier specifies the FR instance the directive shall act on and
 contains a sequence of parameter identifier and parameter value pairs. To be valid,
 the parameter identifier must reference a controllable parameter of the FlfSyncAndChnlDecode
 FR and the parameter value must be of the same type as the parameter value that
 shall be set.
-->
	<xsd:complexType name="FlfSyncDecContrParamIdsAndValuesDirQual">
		<xsd:complexContent>
			<xsd:extension base="DirectiveQualifier"/>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
