<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="urn:ccsds:schema:cssm:1.0.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:ccsds:schema:cssm:1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0">
	<xsd:include schemaLocation="frm_type_definitions.xsd"/>
	<xsd:include schemaLocation="AbstractFrStrataParameterSets.xsd"/>
	<!--
The Frame Data Sink FR filters the stream of received annotated transfer frames from
 a physical channel for subsequent recording in an instance of the Offline Frame
 Buffer (classifier 'OfflineFrameBuffer'). The purpose of this FR is to accommodate
 data capture policies of Agencies that pre-determine which subset of all received
 frames are recorded for subsequent off-line retrieval. Each instance of the Frame
 Data Sink is tied to (and scheduled as part of) a specific Space Link Session Service
 Package, whereas the Offline Frame Buffer persists across the execution of multiple
 SLS Service Packages.
-->
	<xsd:element name="FrameDataSinkElement" type="FrameDataSinkType" substitutionGroup="SLSDataDeliveryProductionStratumParameters"/>
	<xsd:complexType name="FrameDataSinkType">
		<xsd:complexContent>
			<xsd:extension base="SLSDataDeliveryProductionStratumType">
				<xsd:all>
					<xsd:element name="frameDataSinkStorageSelection" type="FrameDataSinkStorageSelectionNamed" minOccurs="0"/>
				</xsd:all>
				<xsd:attribute name="frin" type="xsd:string" use="optional"/>
				<xsd:attribute name="frTypeOid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.50100"/>
				<xsd:attribute name="frNickname" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This enumerated parameter reports the FrameDataSink FR resource status and can take
 on four values:
- 'configured': the associated equipment has been configured;
-
 'operational': the associated equipment is active;
- 'interrupted': a failure has
 been detected;
- 'halted': the associated equipment has been taken out of service.
-->
	<xsd:simpleType name="FrameDataSinkResourceStat">
		<xsd:restriction base="ResourceStat"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the section of received annotated transfer
 frames to be stored in the associated Offline Frame Buffer instance. The values
 are:
 - 'all': which specifies that all annotated frames from the received physical
 channel are to be recorded, or
 - 'channelList':  which specifies the set of master
 channels and/or virtual channels that are to be stored. The valid values are specfic
 to the space data link protocol - TM, AOS, or USLP. The channel list is specified
 as a SEQUENCE OF SCIDs, each of which contains either 'all' (indicating that all
 VCs of the master channel are to be stored) or the SEQUENCE OF VCIDs that are to
 be stored. The ranges of the SCID and VCID fields are limited to the selected space
 data link protocol.
-->
	<xsd:complexType name="FrameDataSinkStorageSelectionNamed">
		<xsd:complexContent>
			<xsd:extension base="SLSDataDeliveryProductionStratumType">
				<xsd:sequence>
					<xsd:element name="FrameDataSinkStorageSelection" type="FrameDataSinkStorageSelection"/>
				</xsd:sequence>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.50100.1.2.1.1"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FrameDataSinkStorageSelection"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FrameDataSinkStorageSelection">
		<xsd:choice>
			<xsd:element name="all">
				<xsd:complexType>
					<xsd:attribute name="value" use="required">
						<xsd:simpleType>
							<xsd:restriction base="NULL"/>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="channelList">
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="tm">
							<xsd:complexType>
								<xsd:sequence minOccurs="1" maxOccurs="1024">
									<xsd:element name="element">
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="tmTfvn">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<!--
              The TFVN of TM frames is version 1 (binary '00').
              -->
															<xsd:simpleType>
																<xsd:restriction base="BitString"/>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="tmScid">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<xsd:simpleType>
																<xsd:restriction base="xsd:integer">
																	<xsd:minInclusive value="0"/>
																	<xsd:maxInclusive value="1023"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="tmVcSelection">
													<xsd:complexType>
														<xsd:choice>
															<xsd:element name="allTmVcids">
																<xsd:complexType>
																	<xsd:attribute name="value" use="required">
																		<xsd:simpleType>
																			<xsd:restriction base="NULL"/>
																		</xsd:simpleType>
																	</xsd:attribute>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="selectedTmVcids">
																<xsd:complexType>
																	<xsd:sequence minOccurs="1" maxOccurs="8">
																		<xsd:element name="element">
																			<xsd:simpleType>
																				<xsd:restriction base="xsd:integer">
																					<xsd:minInclusive value="0"/>
																					<xsd:maxInclusive value="7"/>
																				</xsd:restriction>
																			</xsd:simpleType>
																		</xsd:element>
																	</xsd:sequence>
																</xsd:complexType>
															</xsd:element>
														</xsd:choice>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="aos">
							<xsd:complexType>
								<xsd:sequence minOccurs="1" maxOccurs="256">
									<xsd:element name="element">
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="aosTfvn">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<!--
              The TFVN of AOS Frames is version 2 (binary '01').
              -->
															<xsd:simpleType>
																<xsd:restriction base="BitString"/>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="aosScid">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<xsd:simpleType>
																<xsd:restriction base="xsd:integer">
																	<xsd:minInclusive value="0"/>
																	<xsd:maxInclusive value="255"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="aosVcSelection">
													<xsd:complexType>
														<xsd:choice>
															<xsd:element name="allAosVcids">
																<xsd:complexType>
																	<xsd:attribute name="value" use="required">
																		<xsd:simpleType>
																			<xsd:restriction base="NULL"/>
																		</xsd:simpleType>
																	</xsd:attribute>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="selectedAosVcids">
																<xsd:complexType>
																	<xsd:sequence minOccurs="1" maxOccurs="64">
																		<xsd:element name="element">
																			<xsd:simpleType>
																				<xsd:restriction base="xsd:integer">
																					<xsd:minInclusive value="0"/>
																					<xsd:maxInclusive value="63"/>
																				</xsd:restriction>
																			</xsd:simpleType>
																		</xsd:element>
																	</xsd:sequence>
																</xsd:complexType>
															</xsd:element>
														</xsd:choice>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="uslp">
							<xsd:complexType>
								<xsd:sequence minOccurs="1" maxOccurs="65536">
									<xsd:element name="element">
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="uslpTfvn">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<!--
              The TFVN of USLP frames is version 4 (binary '1100').
              -->
															<xsd:simpleType>
																<xsd:restriction base="BitString"/>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="uslpScid">
													<xsd:complexType>
														<xsd:attribute name="value" use="required">
															<xsd:simpleType>
																<xsd:restriction base="xsd:integer">
																	<xsd:minInclusive value="0"/>
																	<xsd:maxInclusive value="65535"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:attribute>
													</xsd:complexType>
												</xsd:element>
												<xsd:element name="uslpVcSelection">
													<xsd:complexType>
														<xsd:choice>
															<xsd:element name="allUslpVcids">
																<xsd:complexType>
																	<xsd:attribute name="value" use="required">
																		<xsd:simpleType>
																			<xsd:restriction base="NULL"/>
																		</xsd:simpleType>
																	</xsd:attribute>
																</xsd:complexType>
															</xsd:element>
															<xsd:element name="selectedUslpVcids">
																<xsd:complexType>
																	<xsd:sequence minOccurs="1" maxOccurs="64">
																		<xsd:element name="element">
																			<xsd:simpleType>
																				<xsd:restriction base="xsd:integer">
																					<xsd:minInclusive value="0"/>
																					<xsd:maxInclusive value="63"/>
																				</xsd:restriction>
																			</xsd:simpleType>
																		</xsd:element>
																	</xsd:sequence>
																</xsd:complexType>
															</xsd:element>
														</xsd:choice>
													</xsd:complexType>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<!--
This event notifies any change of the frameDataSinkResourceStat parameter value.
-->
	<!--
The event value reports the frameDataSinkResourceStat parameter value that applies
 since the notified frameDataSinkResourceStatChange event has occurred. 
-->
	<xsd:simpleType name="FrameDataSinkResourceStatChangeEvtValue">
		<xsd:restriction base="FrameDataSinkResourceStat"/>
	</xsd:simpleType>
	<!--
This event passes text messages intended for logs or operators involved in the ongoing
 service provision.
-->
	<!--
The messages passed by means of the frameDataSyncOperatorNotify event are classified
 in terms of severity as 'info', 'warning' or 'alarm'. To simplify filtering and
 searching for specific messages, a unique numerical identifier is assigned to each
 message string. The messages are free text such that equipment specific issues can
 be reported. 
-->
	<xsd:complexType name="FrameDataSyncOperatorNotifyMessage">
		<xsd:complexContent>
			<xsd:extension base="OperatorNotifyMessage"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This directive permits setting of the controllable parameters of the FrameDataSink
 FR type.
-->
	<!--
The directive qualifier specifies the FR instance the directive shall act on and
 contains a sequence of parameter identifier and parameter value pairs. To be valid,
 the parameter identifier must reference a controllable parameter of the FrameDataSink
 FR and the parameter value must be of the same type as the parameter value that
 shall be set. 
-->
	<xsd:complexType name="FrameDataSinkContrParamIdsAndValuesDirQual">
		<xsd:complexContent>
			<xsd:extension base="DirectiveQualifier"/>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
