<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="urn:ccsds:schema:cssm:1.0.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:ccsds:schema:cssm:1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0">
	<xsd:include schemaLocation="frm_type_definitions.xsd"/>
	<xsd:include schemaLocation="AbstractFrStrataParameterSets.xsd"/>
	<!--
The Forward Frame CSTS Provider functional resource provides service-user-generated
 Space Link Protocol Data Units (SL-PDUs: transfer frames or Channel Access Data
 Units) to a functional resource in the Synchronization and Channel Coding FR Stratum.
 Each instance of the FwdFrameCstsProvider FR type must be configured to transfer
 SL-PDUs that conform to the specific Synchronization and Channel Coding FR Set that
 it accesses. The functions of the Forward Frame CSTS Provider are specified in CCSDS
 922.3.
-->
	<xsd:element name="FwdFrameCstsProviderElement" type="FwdFrameCstsProviderType" substitutionGroup="DataTransferServicesStratumParameters"/>
	<xsd:complexType name="FwdFrameCstsProviderType">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:all>
					<xsd:element name="ffSvcInstanceId" type="FfSvcInstanceIdNamed" minOccurs="0"/>
					<xsd:element name="ffInitiatorId" type="FfInitiatorIdNamed" minOccurs="0"/>
					<xsd:element name="ffResponderId" type="FfResponderIdNamed" minOccurs="0"/>
					<xsd:element name="ffResponderPortId" type="FfResponderPortIdNamed" minOccurs="0"/>
					<xsd:element name="ffResponseTimeout" type="FfResponseTimeoutNamed" minOccurs="0"/>
					<xsd:element name="ffDataProcessingMode" type="FfDataProcessingModeNamed" minOccurs="0"/>
					<xsd:element name="ffAuthorizedGvcidAndBitMask" type="FfAuthorizedGvcidAndBitMaskNamed" minOccurs="0"/>
					<xsd:element name="ffMinFrameLength" type="FfMinFrameLengthNamed" minOccurs="0"/>
					<xsd:element name="ffMaxFrameLength" type="FfMaxFrameLengthNamed" minOccurs="0"/>
					<xsd:element name="ffInputQueueSize" type="FfInputQueueSizeNamed" minOccurs="0"/>
					<xsd:element name="ffMinAllowedDeliveryCycle" type="FfMinAllowedDeliveryCycleNamed" minOccurs="0"/>
					<xsd:element name="ffNamedEventLabelLists" type="FfNamedEventLabelListsNamed" minOccurs="0"/>
					<xsd:element name="ffMasterThrowEventEnabled" type="FfMasterThrowEventEnabledNamed" minOccurs="0"/>
					<xsd:element name="ffNamedParamLabelLists" type="FfNamedParamLabelListsNamed" minOccurs="0"/>
				</xsd:all>
				<xsd:attribute name="frin" type="xsd:string" use="optional"/>
				<xsd:attribute name="frTypeOid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300"/>
				<xsd:attribute name="frNickname" type="xsd:string" use="required"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This parameter reports the production status of the Forward Frame service instance.
 This parameter can take on one of four values:
 - 'configured':  all production
 functions needed to support this service instance have been configured;
 - ‘operational’:
  all production functions have been enabled to process data for this service instance;

 - ‘interrupted’:  one or more production functions have been stopped because of
 an error condition that may be temporary;
 - ‘halted’:  one or more production
 functions have been stopped by management action.

-->
	<xsd:simpleType name="FfProdStat">
		<xsd:restriction base="ProdStat"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the service instance identifier used in establishing
 the association between the user and provider of the Forward Frame service instance.
 
-->
	<xsd:complexType name="FfSvcInstanceIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:sequence>
					<xsd:element name="FfSvcInstanceId" type="FfSvcInstanceId"/>
				</xsd:sequence>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.2.1.1"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfSvcInstanceId"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FfSvcInstanceId">
		<xsd:complexContent>
			<xsd:extension base="CstsSvcInstanceId"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This enumerated parameter reports the status of the given instance of the Forward
 Frame service. It can take on the following values:
 - 'unbound':  all resources
 required to enable the provision of the service have been allocated, and all objects
 required to provide the service have been instantiated; however, no association
 yet exists between the user and the provider, i.e., the transfer service provider
 port is not bound;
 - 'boundReady':  an association has been established between
 the user and the provider, and they may interact by means of the service operations.
 However, sending of SLPDUs from the user to the provider (by means of the PROCESS-DATA
 operation) is not permitted; the user may enable the transfer of SLPDUs by means
 of the appropriate service operation (START), which, in turn, will cause the provider
 to transition to the state 'boundActive';
 - 'boundActive':  this state resembles
 state ‘boundReady’, except that now the user can send SLPDUs and the provider is
 enabled  to radiate them to the target Space User Node; the service continues in
 this state until the user invokes (a) the STOP operation to cause the provider to
 suspend transmission of SLPDUs and transition back to state 'boundReady' or (b)
 the PEER-ABORT invocation to cause the service to transition back to the 'unbound'
 state.

-->
	<xsd:simpleType name="FfSvcInstanceState">
		<xsd:restriction base="StatefulCstsInstanceState"/>
	</xsd:simpleType>
	<!--
This parameter reports the identifier of the peer application, i.e., the authority
 on whose behalf the CSTS application entity is initiating an association with the
 Forward Frame service provider. The provider performs access control based on this
 parameter. It may also serve as key to further security relevant information such
 as the authentication level and method and the related password.

Given the security
 relevance of this parameter, specific mechanisms for setting this parameter when
 the FR instance is created and for the transfer of associated security relevant
 data might be specified in a bilateral agreement between service user and service
 provider. Also the accessibility by an MD-CSTS instance may be restricted.
-->
	<xsd:complexType name="FfInitiatorIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="FfInitiatorId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfInitiatorId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.4.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FfInitiatorId">
		<xsd:restriction base="AuthorityIdentifier"/>
	</xsd:simpleType>
	<!--
This parameter reports the identifier of the Forward Frame service application. The
 user performs access conrol based on this parameter. It may also serve as key to
 further security relevant information such as the authentication level and method
 and the related password.

Given the security relevance of this parameter, specific
 mechanisms for setting this parameter when the FR instance is created and for the
 transfer of associated security relevant data might be specified in a bilateral
 agreement between service user and service provider. Also the accessibility by an
 MD-CSTS instance may be restricted.
-->
	<xsd:complexType name="FfResponderIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="FfResponderId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfResponderId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.5.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FfResponderId">
		<xsd:restriction base="AuthorityIdentifier"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the logical name of the port used by the underlying
 communication service to respond to invocation on this service instance. The logical
 name is translated internally by the service provider to a port identifier that
 is appropriate to the underlying communication service.

This parameter configures
 and reports the port identifier to be used by the user to connect to the service
 provider. However, the parameter value is only a logical name that needs to be translated
 into the technology-specific addressing information required to establish a connection
 with the specific port of the responding CSTS application entity. As such this parameter
 is irrelevant for the service provider, but it may be needed for certain kind of
 gateways between service user and service provider application.


-->
	<xsd:complexType name="FfResponderPortIdNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="FfResponderPortId" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfResponderPortId"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.6.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FfResponderPortId">
		<xsd:restriction base="ResponderPortId"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the setting of the maximum time period in seconds
 permitted from when a confirmed FwdFrame operation is invoked until the return has
 to be received by the invoker.

If a response is not received within that time
 period, the invoker may invoke the PEER-ABORT operation.
-->
	<xsd:complexType name="FfResponseTimeoutNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="FfResponseTimeout" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfResponseTimeout"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.7.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FfResponseTimeout">
		<xsd:restriction base="SvcResponseTimeout"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the data processing mode of the service instance.
 This complex parameter can have one of two values:
- 'sequenceControlled':  the
 Sequence-Controlled Frame Data Processing procedure is the prime procedure type;
-
 'bufferedData’:  the Buffered Frame Data Processing procedure is the prime procedure
 type.

The ‘bufferedData’ value is further qualified to (a) specify  the transfer
 mode as either:
- 'complete'; or
- timely‘;
and (b) to specify the Maximum Forward
 Buffer Size and Processing Latency Limit.
-->
	<xsd:complexType name="FfDataProcessingModeNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:sequence>
					<xsd:element name="FfDataProcessingMode" type="FfDataProcessingMode"/>
				</xsd:sequence>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.8.1.1"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfDataProcessingMode"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FfDataProcessingMode">
		<xsd:choice>
			<xsd:element name="sequenceControlled">
				<xsd:complexType>
					<xsd:attribute name="value" use="required">
						<xsd:simpleType>
							<xsd:restriction base="NULL"/>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="bufferedData">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="dataTransferMode">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
         This parameter configures and reports the buffered-data transfer mode of the service instance. 
         -->
									<xsd:simpleType>
										<xsd:restriction base="xsd:token">
											<xsd:enumeration value="complete"/>
											<xsd:enumeration value="timely"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="maxFwdBufferSize">
							<xsd:complexType>
								<xsd:attribute name="value" type="LongIntPos" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="processingLatencyLimit">
							<xsd:complexType>
								<xsd:attribute name="value" type="LongIntPos" use="required"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<!--
This parameter configures and reports (a) the bit pattern that specifies the Global
 VCID that is authorized to use the Forward Frame service instance, and (b) the bit
 mask to be applied to the first four octets of each incoming transfer frame) to
 mask out any bits that are not used to ascertain whether the Global VCID of that
 transfer frame is authorized to use the Forward Frame service instance.

For TC
 and AOS frames, only the bits corresponding to the TFVN, SCID, and VCID are set
 to their correct values, and all other bits in the 4-octet field are set to 0. 

For
 USLP frames, only the bits corresponding to the TFVN, SCID, Source or Destination
 ID, and VCID are set to their correct values, and all other bits in the 4-octet
 field are set to 0.

For TC, AOS, or USLP frames, the bit mask values are predefined
 and do not need to be specified in the configuration paramters.

For CADUs, the
 headers are not checked, regardless of the enclosed frame types, and the bit mask
 is predefined to allow any values in the forst 4 octets of the CADU.

For frames
 that do not conform to TC, AOS, or USLP frame formats but still need to have the
 first 4 octets validated, the 'other' value allows the user to specify the allowed
 bit pattern and the bit mask that validates that bit pattern.



-->
	<xsd:complexType name="FfAuthorizedGvcidAndBitMaskNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:sequence>
					<xsd:element name="FfAuthorizedGvcidAndBitMask" type="FfAuthorizedGvcidAndBitMask"/>
				</xsd:sequence>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.9.1.1"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfAuthorizedGvcidAndBitMask"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FfAuthorizedGvcidAndBitMask">
		<xsd:choice>
			<xsd:element name="tcGvcid">
				<!--
    When TC frames are used, the bits corresponding to the TFVN (bits 0-1 = '00' binary) , SCID (bits 6-15), and VCID (bits 16-21) are set to their correct values, and all other bits in the 4-octet field are set to 0. The value of the gvcid-bit-mask configuration parameter shall be C3 FF FC 00  Hex.
    -->
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="tcTfvn">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
         The TFVN of TC frames is version 1 (binary '00')
         -->
									<xsd:simpleType>
										<xsd:restriction base="BitString"/>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="tcScid">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="1023"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="tcVcid">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="63"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="aosGvcid">
				<!--
    When AOS frames are used, the bits corresponding to the TFVN (bits 0-1 = '01' binary), SCID (bits 2-9), and VCID (bits 10-15) are set to their correct values, and all other bits in the 4-octet field are set to 0. The value of the gvcid-bit-mask configuration parameter shall be FF FF 00 00 Hex
    -->
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="aosTfvn">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
         The TFVN of AOS frames is version 2 (binary '01').
         -->
									<xsd:simpleType>
										<xsd:restriction base="BitString"/>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="aosScid">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="255"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="aosVcid">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="63"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="uslpGvcid">
				<!--
    When USLP frames are used,  the bits corresponding to the TFVN (bits 0-3 = '1100'), SCID (bits 4-19), Source or Destination ID (bit20),and VCID (bits 21-26) are set to their correct values, and all other bits in the 4-octet field are set to 0. The value of the gvcid-bit-mask configuration parameter shall be FF FF FF E0 Hex
    -->
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="uslpTfvn">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
         The TFVN of USLP frames is version 4 (binary '1100').
         -->
									<xsd:simpleType>
										<xsd:restriction base="BitString"/>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="uslpScid">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="65535"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="uslpVcid">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:integer">
											<xsd:minInclusive value="0"/>
											<xsd:maxInclusive value="63"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="cadu">
				<xsd:complexType>
					<xsd:attribute name="value" use="required">
						<!--
       When a CADU is used, no frame header checking is performed, regardeless of the space link protocol. The first 4 octets may contain any value, and the value of the gvcid-bit-mask configuration parameter shall be 00 00 00 00  Hex.
       -->
						<xsd:simpleType>
							<xsd:restriction base="NULL"/>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="other">
				<!--
    For frames that do not conform to the TC, AOS, or USLP formats, the content of the Authorized GVCID and the structure of the Bit Mask is defined by the user.
    -->
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="otherBitMask">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<xsd:simpleType>
										<xsd:restriction base="xsd:hexBinary">
											<xsd:minLength value="4"/>
											<xsd:maxLength value="4"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="otherAuthorizedValue">
							<xsd:complexType>
								<xsd:attribute name="value" use="required">
									<!--
         For other frame types, the authorized value can be any bit pattern that is appropriate to the first 4 octets of that frame type.
         -->
									<xsd:simpleType>
										<xsd:restriction base="xsd:hexBinary">
											<xsd:minLength value="4"/>
											<xsd:maxLength value="4"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<!--
This parameter configures and reports the minimum permitted length, in octets, for
 incoming space link protocol data units (e.g., transfer frames).
-->
	<xsd:complexType name="FfMinFrameLengthNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="FfMinFrameLength" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfMinFrameLength"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.10.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FfMinFrameLength">
		<xsd:restriction base="ShortIntPos"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the maximum permitted length, in octets, for
 incoming space link protocol data units (e.g., transfer frames). 
The maximum permitted
 length must be equal to or greater than the minimum permitted length (ffMinFrameLength).
-->
	<xsd:complexType name="FfMaxFrameLengthNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="FfMaxFrameLength" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfMaxFrameLength"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.11.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FfMaxFrameLength">
		<xsd:restriction base="ShortIntPos"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the initial value of the Input Queue size (that
 is, the size of the queue upon the binding of the service instance), in number of
 PROCESS-DATA invocations, for the data processing procedure of the service instance.
-->
	<xsd:complexType name="FfInputQueueSizeNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="FfInputQueueSize" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfInputQueueSize"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.12.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FfInputQueueSize">
		<xsd:restriction base="LongIntPos"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the minimum allowed delivery cycle, in milliseconds,
 to which any instance of the Cyclic Report procedure can be set.

If the Cyclic
 Report procedure is not present in the implementation of the service, this paramter
 shall be undefined.
-->
	<xsd:complexType name="FfMinAllowedDeliveryCycleNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="FfMinAllowedDeliveryCycle" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfMinAllowedDeliveryCycle"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.13.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FfMinAllowedDeliveryCycle">
		<xsd:restriction base="MinAllowedDeliveryCycle"/>
	</xsd:simpleType>
	<!--
This parameter configures and reports the set of Event Label Lists used by the Notification
 procedure of the service instance.
The Notification procedure is optional for implementations
 of the Forward Frame service. If the service implementation does not support this
 procedure, or if it is supported but there are no label lists, this parameter is
 not set and if queried the parameter qualifier shall be 'undefined'.
-->
	<xsd:complexType name="FfNamedEventLabelListsNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:sequence>
					<xsd:element name="FfNamedEventLabelLists" type="FfNamedEventLabelLists"/>
				</xsd:sequence>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.14.1.1"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfNamedEventLabelLists"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FfNamedEventLabelLists">
		<xsd:complexContent>
			<xsd:extension base="LabelListSet"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This parameter configures and reports whether the service instance is enabled to
 invoke directives on the production functional resources instances that directly
 support it. This parameter can take on two values:
 - 'enabled';
 - ‘disabled’.
If
 the Master Throw Event procedure is not implemented for the service instance, this
 parameter is undefined and ignored in the configuration of the functional  resource.
-->
	<xsd:complexType name="FfMasterThrowEventEnabledNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:attribute name="value" type="FfMasterThrowEventEnabled" use="required"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfMasterThrowEventEnabled"/>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.15.1.1"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="FfMasterThrowEventEnabled">
		<xsd:restriction base="xsd:token">
			<xsd:enumeration value="enabled"/>
			<xsd:enumeration value="disabled"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!--
This parameter configures and reports the set of Parameter Label Lists used by the
 Cyclic Report and/or Information Query procedures of the service instance.

NOTE
 - Both the Cyclic Report and Information Query procedures are optional for implementations
 of the Forward Frame service. If the service implementation supports neither of
 these procedures, or if either or both are supported but there are no label lists,
 this parameter is not set and if queried the parameter qualifier shall be 'undefined'.
-->
	<xsd:complexType name="FfNamedParamLabelListsNamed">
		<xsd:complexContent>
			<xsd:extension base="DataTransferServicesStratumType">
				<xsd:sequence>
					<xsd:element name="FfNamedParamLabelLists" type="FfNamedParamLabelLists"/>
				</xsd:sequence>
				<xsd:attribute name="oid" type="ObjectIdentifier" fixed="1.3.112.4.4.2.1.80300.1.16.1.1"/>
				<xsd:attribute name="classifier" type="xsd:string" fixed="FfNamedParamLabelLists"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FfNamedParamLabelLists">
		<xsd:complexContent>
			<xsd:extension base="LabelListSet"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This parameter reports the number of space link protocol data units (e.g., frames),
 in number of PROCESS-DATA invocations, received by the data processing procedure
 of the service instance since the beginning of the Service Instance Provision Period.
 
-->
	<xsd:simpleType name="FfNumberOfDataUnitsRcvd">
		<xsd:restriction base="LongIntUnsigned"/>
	</xsd:simpleType>
	<!--
This parameter reports the number of spalce link protocol data units (e.g., frames)
 , in number of PROCESS-DATA invocations, submitted by the data processing procedure
 of the service instance to service production processing  since the beginning of
 the Service Instance Provision Period. 
-->
	<xsd:simpleType name="FfNumberOfDataUnitsSubmittedToProcessing">
		<xsd:restriction base="LongIntUnsigned"/>
	</xsd:simpleType>
	<!--
This parameter reports the number of space link protocol data units (e.g., frames)
 in number of PROCESS-DATA invocations, that have been reported by service production
 to have completed processing – i.e., to have been radiated - since the beginning
 of the Service Instance Provision Period
-->
	<xsd:simpleType name="FfNumberOfDataUnitsProcessed">
		<xsd:restriction base="LongIntUnsigned"/>
	</xsd:simpleType>
	<!--
This event notifies any change of ffProdStat parameter value.

-->
	<!--
The event value reports the ffProdStat value that applies since the notified ffProdStatChange
 event has occurred.

-->
	<xsd:simpleType name="FfProdStatChangeEvtValue">
		<xsd:restriction base="FfProdStat"/>
	</xsd:simpleType>
	<!--
This event triggers when a one or more parameters controlling the configuration of
 service production have been changed.

This event carries no additional information.
-->
	<!--
The value of this event is 'empty'.
-->
	<xsd:simpleType name="FfProdConfgurationChangeEvtValue">
		<xsd:restriction base="ProdConfigurationChangeEvtValue"/>
	</xsd:simpleType>
	<!--
This event passes text messages intended for logs or operators involved in the ongoing
 service provision.
-->
	<!--
The messages passed by means of the ffOperatorNotify event are classified in terms
 of severity as 'info', 'warning' or 'alarm'. To simplify filtering and searching
 for specific messages, a unique numerical identifier is assigned to each message
 string. The messages are free text such that equipment specific issues can be reported.
 
-->
	<xsd:complexType name="FfOperatorNotifyMessage">
		<xsd:complexContent>
			<xsd:extension base="OperatorNotifyMessage"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--
This directive permits setting of the controllable parameters of the FwdFrameCstsProvider
 FR type. 
-->
	<!--
The directive qualifier specifies the FR instance the directive shall act on and
 contains a sequence of parameter identifier and parameter value pairs. To be valid,
 the parameter identifier must reference a controllable parameter of the FwdFrameCstsProvider
 FR and the parameter value must be of the same type as the parameter value that
 shall be set.
-->
	<xsd:complexType name="FfContrParamIdsAndValuesDirQual">
		<xsd:complexContent>
			<xsd:extension base="DirectiveQualifier"/>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
