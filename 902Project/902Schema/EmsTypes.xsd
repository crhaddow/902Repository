<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<!-- The file header type defines the file header used in all EMS files. -->
	<xs:complexType name="file_header_type">
		<xs:sequence>
			<!-- The data set identifier -->
			<xs:element name="data_set_id" type="data_set_id_type" />
			<!-- Purpose: Operational or Test -->
			<xs:element name="purpose" type="xs:string" />
			<!-- Start time of the period over which the file is valid -->
			<xs:element name="validity_start" type="utc_time" />
			<!-- End time of the period over which the file is valid -->
			<xs:element name="validity_end" type="utc_time" />
			<!-- A unique identifier for each file from a specific mission (or ESOC
				infrastructure) -->
			<xs:element name="mission_name" type="xs:string" />
			<!-- Name of the spacecraft referenced within the file -->
			<xs:element name="spacecraft_name" type="xs:string" />
			<!-- Filename: please refer to EMS ICD section 3.2 -->
			<xs:element name="filename" type="xs:string" />
			<!-- The generation time stamp of the file -->
			<xs:element name="generation_time" type="utc_time" />
			<!-- The version number of the file -->
			<xs:element name="version" type="version" />
		</xs:sequence>
	</xs:complexType>

	<!-- The data set type is the identifier for the file type providing the
		user with information on the expected data content -->
	<xs:simpleType name="data_set_id_type">
		<xs:restriction base="xs:string">
			<!-- Event File with flight dynamics events -->
			<xs:enumeration value="EVF" />
			<!-- Event File with mission specific events -->
			<xs:enumeration value="EVFM" />
			<!-- Mission Event File Acceptance File -->
			<xs:enumeration value="EVFACC" />
			<!-- Event File Acceptance File -->
			<xs:enumeration value="EVFMACC" />
			<!-- Plan View -->
			<xs:enumeration value="PLNVIEW" />
			<!-- Standing Order Refinement -->
			<xs:enumeration value="SOREF" />
			<!-- Standing Order Refinement Acceptance File -->
			<xs:enumeration value="SOREFACC" />
			<!-- OSS Update File -->
			<xs:enumeration value="OSSUPD" />
			<!-- OSS Notification File -->
			<xs:enumeration value="OSSNOT" />
			<!-- Allocation Plan -->
			<xs:enumeration value="ALLPLAN" />
			<!-- Standing Order Refinement Template -->
			<xs:enumeration value="SOREFTMPL" />
			<!-- OSS Update Template File -->
			<xs:enumeration value="OSSUPDTMPL" />
		</xs:restriction>
	</xs:simpleType>

	<!-- The purpose of the file within the planning context: Operational or
		Test -->
	<xs:simpleType name="purpose_type">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Operational" />
			<xs:enumeration value="Test" />
		</xs:restriction>
	</xs:simpleType>

	<!-- The time types used in the EMS files -->
	<xs:simpleType name="utc_time">
		<xs:restriction base="xs:token">
			<!-- The pattern represents CCSDS ASCII TIME CODE A: YYYY-MM-DDThh:mm:ss.dddZ
				or B: YYYY-DDDThh:mm:ss.dddZ where the milliseconds (ddd) are optional. Examples:
				2008-03-31T00:17:56.300Z or 2008-091T00:17:56.300Z -->
			<xs:pattern value="\d\d\d\d-(\d\d-\d\d|\d\d\d)T\d\d:\d\d:\d\d(.\d\d\d)?Z" />
		</xs:restriction>
	</xs:simpleType>

	<!-- The time type extends the utc_time type by a type attribute fixed to
		'absolute_utc' -->
	<xs:complexType name="time_type">
		<xs:simpleContent>
			<xs:extension base="utc_time">
				<xs:attribute name="type" fixed="absolute_utc" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The delta_time type specifies the format for delta time in EMS files -->
	<xs:simpleType name="delta_time">
		<xs:restriction base="xs:token">
			<!-- The delta time format: sDDThhmmss.ddd with optional milliseconds
				Example: 00T120000.000 or 00T120000 represent 12 hours -->
			<xs:pattern value="-?\d\dT\d\d\d\d\d\d(.\d\d\d)?" />
		</xs:restriction>
	</xs:simpleType>

	<!-- The delta_time_type type extends the delta_time by a type attribute
		set to 'delta_utc' -->
	<xs:complexType name="delta_time_type">
		<xs:simpleContent>
			<xs:extension base="delta_time">
				<xs:attribute name="type" fixed="delta_utc" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The request status type defines the format of the return codes, these
		are also referred to as request status -->
	<xs:simpleType name="request_status_type">
		<xs:restriction base="xs:token">
			<!-- Please refer to the appendix of the EMS ICD for the return codes -->
			<xs:pattern value="\d\d\d\d" />
		</xs:restriction>
	</xs:simpleType>

	<!-- The definition of characters available for names within EMS files.
		Note that the '.' is excluded for names -->
	<xs:simpleType name="name">
		<xs:restriction base="xs:token">
			<xs:pattern value="[0-9,A-Z,a-z_\-]+" />
		</xs:restriction>
	</xs:simpleType>

	<!-- The integer_type add a type attribute to the xs:integer -->
	<xs:complexType name="integer_type">
		<xs:simpleContent>
			<xs:extension base="xs:int">
				<xs:attribute name="type" fixed="integer" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- Extends the basic type by a dedicated type attribute -->
	<xs:complexType name="unsigned_integer_type">
		<xs:simpleContent>
			<xs:extension base="xs:unsignedInt">
				<xs:attribute name="type" fixed="uint" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- Extends the basic type by a dedicated type attribute -->
	<xs:complexType name="float_type">
		<xs:simpleContent>
			<xs:extension base="xs:float">
				<xs:attribute name="type" fixed="float" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- Extends the basic type by a dedicated type attribute -->
	<xs:complexType name="boolean_type">
		<xs:simpleContent>
			<xs:extension base="xs:boolean">
				<xs:attribute name="type" fixed="boolean" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- Extends the basic type by a dedicated type attribute -->
	<xs:complexType name="string_type">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="type" fixed="string" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The OSG Distinguished Name consists of <mission agreement name>.<user
		service name>.<user service definition name>.<operational service group name>
		Example: ENVISAT_Routine_1.envisat_orbit_com.nominal_definition.orbit_comms -->
	<xs:simpleType name="osg_dn">
		<xs:restriction base="xs:token">
			<xs:pattern
				value="[0-9,A-Z,a-z_\-]+\.[0-9,A-Z,a-z_\-]+\.[0-9,A-Z,a-z_\-]+\.[0-9,A-Z,a-z_\-]+" />
		</xs:restriction>
	</xs:simpleType>

	<!-- Extends the osg_dn type by a dedicated type attribute -->
	<xs:complexType name="osg_dn_type">
		<xs:simpleContent>
			<xs:extension base="osg_dn">
				<xs:attribute name="type" fixed="string" />
				<xs:attribute name="margins_used" type="xs:boolean" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The composite type can contain child elements containing values and
		types -->
	<xs:complexType name="composite_type" mixed="false">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="time_type" />
			<xs:element name="delta_time_type" />
			<xs:element name="integer_type" />
			<xs:element name="float_type" />
			<xs:element name="boolean_type" />
			<xs:element name="string_type" />
			<xs:element name="composite_type" />
		</xs:choice>
		<xs:attribute name="type" fixed="composite" />
	</xs:complexType>

	<!-- The version type defines the version format used within EMS files -->
	<xs:simpleType name="version">
		<xs:restriction base="xs:token">
			<xs:pattern value="\d\d.\d\d" />
		</xs:restriction>
	</xs:simpleType>

	<!-- This string references an OSS ID on the plan -->
	<xs:simpleType name="oss_ref_type">
		<xs:restriction base="xs:string" />
	</xs:simpleType>

	<!-- The update notification type used in OSSNOT files -->
	<xs:simpleType name="update_notification_type">
		<xs:restriction base="xs:string">
			<!-- The OSS has been committed -->
			<xs:enumeration value="committed" />
			<!-- The OSS has been modified in terms of time -->
			<xs:enumeration value="modified" />
			<!-- The OSS has been removed from the plan -->
			<xs:enumeration value="removed" />
			<!-- The OSS has been requested and added to the plan -->
			<xs:enumeration value="requested" />
			<!-- The OSS has been scheduled and added to the plan -->
			<xs:enumeration value="scheduled" />
			<!-- The OSS has been deleted from the plan -->
			<xs:enumeration value="deleted" />
			<!-- The OSS has been rejected -->
			<xs:enumeration value="rejecteded" />
		</xs:restriction>
	</xs:simpleType>

	<!-- The OSS parameters group is made up out of OSG Distinguished Name,
		spacecraft ID, ground station name and OSS timings -->
	<xs:group name="oss_params_group">
		<xs:sequence>
			<xs:group ref="oss_annotation_group" />
			<xs:group ref="timing_group" />
		</xs:sequence>
	</xs:group>

	<!-- The OSS annotation group is made up out of OSG Distinguished Name,
		spacecraft ID and ground station name -->
	<xs:group name="oss_annotation_group">
		<xs:annotation>
			<xs:documentation>Provides the information to which OSG, satellite
				and ground station the OSS is related
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="osg_dn" type="parameter_osg_dn" />

			<!-- Available satellite IDs can be provided for information purposes
				in the context of OSSUPD templates -->
			<xs:element name="available_satellite_id" type="xs:string"
				minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="satellite_id" type="parameter_satellite_id" />

			<!-- Available ground stations can be provided for information purposes
				in the context of OSSUPD templates -->
			<xs:element name="available_ground_station" type="xs:string"
				minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="ground_station" type="parameter_ground_station" />
		</xs:sequence>
	</xs:group>

	<!-- Attention: one has to provide always the track timings. Valid combinations
		are: tracking_start and tracking_end OR activity_start and activity_end OR
		all four times. -->
	<xs:group name="timing_group">
		<xs:sequence>
			<xs:element name="tracking_start" type="parameter_bot"
				minOccurs="0" />
			<xs:element name="tracking_end" type="parameter_eot"
				minOccurs="0" />
			<xs:element name="activity_start" type="parameter_boa"
				minOccurs="0" />
			<xs:element name="activity_end" type="parameter_eoa"
				minOccurs="0" />
		</xs:sequence>
	</xs:group>

	<!-- A place holder for concrete parameter -->
	<xs:complexType name="abstract_parameter_type" abstract="true">
		<xs:sequence />
		<xs:attribute name="is_parameter" fixed="true" />
	</xs:complexType>

	<!-- The parameter type with identifier and parameter child elements -->
	<xs:complexType name="parameter_type">
		<xs:annotation>
			<xs:documentation>The generic parameter type with identifier and
				value
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="abstract_parameter_type">
				<xs:sequence>
					<xs:element name="identifier" type="xs:string" />
					<xs:choice>
						<xs:element name="value" type="value_type" />
						<xs:element name="parameter" type="parameter_type"
							maxOccurs="unbounded" />
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- A compact parameter type with identifier and type as attributes. The
		value is the element content -->
	<xs:complexType name="compact_parameter_type" mixed="true">
		<xs:annotation>
			<xs:documentation>An alternative, more compact representation of a
				parameter
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent mixed="true">
			<xs:extension base="abstract_parameter_type">
				<xs:attribute name="identifier" type="xs:string" />
				<xs:attribute name="type" type="value_enum_type" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- The definition for the valid types -->
	<xs:simpleType name="value_enum_type">
		<xs:restriction base="xs:string">
			<xs:enumeration value="absolute_utc" />
			<xs:enumeration value="delta_utc" />
			<xs:enumeration value="integer" />
			<xs:enumeration value="uint" />
			<xs:enumeration value="float" />
			<xs:enumeration value="boolean" />
			<xs:enumeration value="string" />
			<xs:enumeration value="enum" />
			<xs:enumeration value="octettstring" />
			<xs:enumeration value="composite" />
		</xs:restriction>
	</xs:simpleType>

	<!-- The value type with a type attribute -->
	<xs:complexType name="value_type">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="type" type="value_enum_type"
					default="string" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The parameter holds the distinguished name of an OSG. -->
	<xs:complexType name="parameter_osg_dn">
		<xs:simpleContent>
			<xs:extension base="osg_dn_type">
				<xs:attribute name="identifier" fixed="osgDn" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The parameter holds the satellite ID -->
	<xs:complexType name="parameter_satellite_id">
		<xs:simpleContent>
			<xs:extension base="string_type">
				<xs:attribute name="identifier" type="xs:string" fixed="satelliteId" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The parameter holds the ground station -->
	<xs:complexType name="parameter_ground_station">
		<xs:simpleContent>
			<xs:extension base="string_type">
				<xs:attribute name="identifier" type="xs:string" fixed="groundStation" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The parameter for the Begin Of Track -->
	<xs:complexType name="parameter_bot">
		<xs:simpleContent>
			<xs:extension base="time_type">
				<xs:attribute name="identifier" fixed="BOT" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The parameter for the End Of Track -->
	<xs:complexType name="parameter_eot">
		<xs:simpleContent>
			<xs:extension base="time_type">
				<xs:attribute name="identifier" fixed="EOT" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The parameter for the Begin Of Activity -->
	<xs:complexType name="parameter_boa">
		<xs:simpleContent>
			<xs:extension base="time_type">
				<xs:attribute name="identifier" fixed="BOA" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The parameter for the End Of Activity -->
	<xs:complexType name="parameter_eoa">
		<xs:simpleContent>
			<xs:extension base="time_type">
				<xs:attribute name="identifier" fixed="EOA" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The parameter for configuration profile names -->
	<xs:complexType name="parameter_configuration_profile_name">
		<xs:simpleContent>
			<xs:extension base="string_type">
				<xs:attribute name="identifier" fixed="configuration_profile_name" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The parameter for configuration profiles -->
	<xs:complexType name="parameter_configuration_profile">
		<xs:complexContent>
			<xs:extension base="composite_type">
				<xs:sequence>
					<xs:element name="configuration_profile_name" type="parameter_configuration_profile_name" />
					<xs:element name="parameter" type="compact_parameter_type"
						minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
				<xs:attribute name="identifier" fixed="configuration_profile" />
				<xs:attribute name="service" type="xs:string" />
				<xs:attribute name="requirement" type="xs:string" />
				<xs:attribute name="default" type="xs:boolean" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- The parameter holding a comment -->
	<xs:complexType name="parameter_comment_string">
		<xs:simpleContent>
			<xs:extension base="string_type">
				<xs:attribute name="identifier" type="xs:string" fixed="commentString" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<!-- The OSS request parameter -->
	<xs:complexType name="parameter_oss_request">
		<xs:complexContent>
			<xs:extension base="abstract_parameter_type">
				<xs:sequence>
					<xs:group ref="oss_params_group" />
				</xs:sequence>
				<xs:attribute name="identifier" type="xs:string" fixed="ossRequest" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- The available satellite IDs for SOREF and OSS Updates -->
	<xs:complexType name="available_satellite_id_type">
		<xs:sequence>
			<xs:element name="available_satellite_id" type="xs:string"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<!-- The available ground station names for SOREF and OSS Updates -->
	<xs:complexType name="available_ground_station_type">
		<xs:sequence>
			<xs:element name="available_ground_station" type="xs:string"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
</xs:schema>
